{
  "openapi": "3.0.1",
  "info": {
    "title": "Customer API",
    "version": "latest"
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "paths": {
    "/export/dataset/vehicle-incident": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetVehicleIncidentGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/vehicle-incident/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/incident-event": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIncidentEventGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/incident-event/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/procedural": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetProceduralGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/procedural/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/hazard-spotting": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetHazardSpottingGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/hazard-spotting/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/person": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetPersonGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/person/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/general-risk": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetGeneralRiskGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/general-risk/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/training": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetTrainingGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/training/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/equipment": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetEquipmentGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/equipment/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/org-unit": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetOrgUnitGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/safe-unsafe": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetSafeUnsafeGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/safe-unsafe/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/fire-risk": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetFireRiskGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/fire-risk/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/supplier-contractor": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetSupplierContractorGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/supplier-contractor/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/incident-analysis": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIncidentAnalysisGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/incident-analysis/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/action": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetActionGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/approval": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetApprovalGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/project-risk": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetProjectRiskGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/project-risk/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/driving": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetDrivingGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/driving/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/activity-risk": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetActivityRiskGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/activity-risk/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/act-haz-con": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetActHazConGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/project": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetProjectGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/project/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/user": {
      "post": {
        "description": "Create/update a user using the provided details. If a user with matching 'username' already exists then they will be updated. If the user with matching 'username' is deactivated then they will be reactivated. The 'email' address must be unique, specifying a duplicate 'email' will result in an HTTP error 409.",
        "requestBody": {
          "description": "User details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userPOSTRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response - Successful creation or update of the user."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "409": {
            "description": "409 response - Conflict. A user with the specified email already exists."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/user/{username}": {
      "delete": {
        "description": "Disable the user in the specified in the URL path. This will disable the user meaning they can no longer login, however it does not delete the user record entirely as this can only be done manually via the UI once all records associated with the user have been reassigned.",
        "parameters": [
          {
            "description": "The unique login username for the user. URL escaping needs to be applied to the value of this path parameter.",
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response - Successfully disabled the user (note this will also be the response if specified User is already disabled or did not exist)."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/org-unit": {
      "post": {
        "description": "Create/update an organisational unit using the provided details. If an organisational unit with the provided 'externalId' already exists then that organisational unit will be updated. If the organisational unit with matching 'externalId' is deactivated then the organisational unit will be reactivated.",
        "requestBody": {
          "description": "Organisational unit details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orgUnitPOSTRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response - Successful creation or update of the organisational unit."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/org-unit/{externalId}": {
      "delete": {
        "description": "Disable the specified organisational unit in the URL path. This means that the specified organisational unit is not enabled. However, it does not delete the organisational unit entirely as this can only be done manually via the UI.",
        "parameters": [
          {
            "description": "The unique external id of the organisational unit.",
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response - Successfully disabled the organisational unit (note this will also be the response if specified organisational unit is already disabled or did not exist)."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/ping": {
      "get": {
        "description": "DIAGNOSTIC USE ONLY - Provides confirmation that the API is reachable and that the API key is valid. Usage of this resource is throttled to prevent misuse (do not use this as part of regular integration processes).",
        "responses": {
          "200": {
            "description": "Return 200 response if the caller providers a valid API key"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/{proxy+}": {}
  },
  "components": {
    "schemas": {
      "exportDatasetIqGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "questionId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqSectionName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "question": {
              "type": "string"
            },
            "questionOrder": {
              "type": "string"
            },
            "extractFieldName": {
              "type": "string"
            },
            "isNa": {
              "type": "boolean"
            },
            "answerType": {
              "type": "string"
            },
            "answers": {
              "type": "object"
            },
            "comment": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetVehicleIncidentGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "incidentLocation": {
              "type": "string"
            },
            "incidentLocality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "incidentType": {
              "type": "string"
            },
            "incidentSeverity": {
              "type": "string"
            },
            "incidentLocationType": {
              "type": "string"
            },
            "incidentOccurredAt": {
              "type": "string",
              "format": "date-time"
            },
            "incidentReportedBy": {
              "type": "string"
            },
            "incidentReportedTo": {
              "type": "string"
            },
            "incidentReportedByDate": {
              "type": "string",
              "format": "date"
            },
            "incidentReportedToDate": {
              "type": "string",
              "format": "date"
            },
            "incidentDetails": {
              "type": "string"
            },
            "incidentWeather": {
              "type": "string"
            },
            "incidentWitnesses": {
              "type": "string"
            },
            "incidentConclusion": {
              "type": "string"
            },
            "responsibleParty": {
              "type": "string"
            },
            "responsiblePartyOther": {
              "type": "string"
            },
            "responsiblePartyWhy": {
              "type": "string"
            },
            "vehicleType": {
              "type": "string"
            },
            "vehicleRegistrationPlate": {
              "type": "string"
            },
            "vehicleInsuranceRef": {
              "type": "string"
            },
            "vehicleMake": {
              "type": "string"
            },
            "vehicleModel": {
              "type": "string"
            },
            "vehicleChassisNum": {
              "type": "string"
            },
            "vehicleGrossWeight": {
              "type": "string"
            },
            "vehicleYearManufactured": {
              "type": "integer"
            },
            "vehicleStatus": {
              "type": "string"
            },
            "vehicleDeliveredDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleTransferredDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleMOTDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleInspectedDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleServicedDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleUnattended": {
              "type": "boolean"
            },
            "vehicleStationary": {
              "type": "boolean"
            },
            "vehicleLights": {
              "type": "string"
            },
            "vehicleSpeed": {
              "type": "string"
            },
            "vehicleNumOfPassengers": {
              "type": "string"
            },
            "vehiclePassengerDetails": {
              "type": "string"
            },
            "vehicleSeatBeltsFitted": {
              "type": "boolean"
            },
            "vehicleSeatBeltsInUse": {
              "type": "boolean"
            },
            "vehicleUsedWithPermission": {
              "type": "boolean"
            },
            "vehicleNoPermissionDetails": {
              "type": "string"
            },
            "vehicleDamageDetails": {
              "type": "string"
            },
            "vehicleWhereInspect": {
              "type": "string"
            },
            "otherVehicles": {
              "type": "string"
            },
            "otherVehicleLights": {
              "type": "string"
            },
            "otherVehicleSpeed": {
              "type": "string"
            },
            "trailer": {
              "type": "boolean"
            },
            "trailerIdNumber": {
              "type": "string"
            },
            "trailerMake": {
              "type": "string"
            },
            "trailerModel": {
              "type": "string"
            },
            "trailerStatus": {
              "type": "string"
            },
            "trailerOwnerDetails": {
              "type": "string"
            },
            "trailerNatureOfLoad": {
              "type": "string"
            },
            "roadType": {
              "type": "string"
            },
            "roadSpeedLimit": {
              "type": "string"
            },
            "roadState": {
              "type": "string"
            },
            "roadWidth": {
              "type": "string"
            },
            "roadStreetLightsOn": {
              "type": "boolean"
            },
            "policeAttended": {
              "type": "boolean"
            },
            "policeOfficerName": {
              "type": "string"
            },
            "policeStationName": {
              "type": "string"
            },
            "policeForceName": {
              "type": "string"
            },
            "policeProsecutionWarning": {
              "type": "boolean"
            },
            "personType": {
              "type": "string"
            },
            "personTypeOther": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personTitle": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personSex": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "personLicenceType": {
              "type": "string"
            },
            "personLicenceNumber": {
              "type": "string"
            },
            "personLicenceIssue": {
              "type": "string"
            },
            "personLicenceValidDate": {
              "type": "string",
              "format": "date"
            },
            "personLicenceExpireDate": {
              "type": "string",
              "format": "date"
            },
            "personLicenceCategory": {
              "type": "string"
            },
            "personLicenceGroup": {
              "type": "string"
            },
            "personDriverDetails": {
              "type": "string"
            },
            "personInjured": {
              "type": "boolean"
            },
            "personTakenToHospital": {
              "type": "string"
            },
            "personDetained": {
              "type": "string"
            },
            "personInjuryDetails": {
              "type": "string"
            },
            "environmentalType": {
              "type": "string"
            },
            "environmentalTypeOther": {
              "type": "string"
            },
            "environmentalRelease": {
              "type": "string"
            },
            "environmentalReleaseTo": {
              "type": "string"
            },
            "environmentalWitness": {
              "type": "string"
            },
            "environmentalAction": {
              "type": "string"
            },
            "estLostTime": {
              "type": "number"
            },
            "estLostCost": {
              "type": "number"
            },
            "estLostTimeCost": {
              "type": "number"
            },
            "actLostTime": {
              "type": "number"
            },
            "actLostCost": {
              "type": "number"
            },
            "actLostTimeCost": {
              "type": "number"
            },
            "estReplaceTime": {
              "type": "number"
            },
            "estReplaceCost": {
              "type": "number"
            },
            "estReplaceTimeCost": {
              "type": "number"
            },
            "actReplaceTime": {
              "type": "number"
            },
            "actReplaceCost": {
              "type": "number"
            },
            "actReplaceTimeCost": {
              "type": "number"
            },
            "estProductionUnit": {
              "type": "number"
            },
            "estProductionCost": {
              "type": "number"
            },
            "estProductionTime": {
              "type": "number"
            },
            "actProductionUnit": {
              "type": "number"
            },
            "actProductionCost": {
              "type": "number"
            },
            "actProductionTime": {
              "type": "number"
            },
            "estEquipReplace": {
              "type": "number"
            },
            "estEquipRepair": {
              "type": "number"
            },
            "estEquipHire": {
              "type": "number"
            },
            "actEquipReplace": {
              "type": "number"
            },
            "actEquipRepair": {
              "type": "number"
            },
            "actEquipHire": {
              "type": "number"
            },
            "estFinancialClaim": {
              "type": "number"
            },
            "estFinancialFine": {
              "type": "number"
            },
            "actFinancialClaim": {
              "type": "number"
            },
            "actFinancialFine": {
              "type": "number"
            },
            "estMaterialCost": {
              "type": "number"
            },
            "actMaterialCost": {
              "type": "number"
            },
            "totalCostEstimate": {
              "type": "number"
            },
            "totalCostActual": {
              "type": "number"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetIncidentEventGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "incidentLocation": {
              "type": "string"
            },
            "incidentLocality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "incidentType": {
              "type": "string"
            },
            "incidentSubType": {
              "type": "string"
            },
            "incidentThirdLevel": {
              "type": "string"
            },
            "incidentTypeOther": {
              "type": "string"
            },
            "incidentDangerousType": {
              "type": "string"
            },
            "incidentSeverity": {
              "type": "string"
            },
            "incidentStatus": {
              "type": "string"
            },
            "incidentOccurredAt": {
              "type": "string",
              "format": "date-time"
            },
            "incidentReportedBy": {
              "type": "string"
            },
            "incidentReportedTo": {
              "type": "string"
            },
            "incidentReportedToContact": {
              "type": "string"
            },
            "incidentReportedByDate": {
              "type": "string",
              "format": "date"
            },
            "incidentReportedToDate": {
              "type": "string",
              "format": "date"
            },
            "incidentStartAbsenceDate": {
              "type": "string",
              "format": "date"
            },
            "incidentReturnToWorkDate": {
              "type": "string",
              "format": "date"
            },
            "incidentDetails": {
              "type": "string"
            },
            "incidentNearMiss": {
              "type": "boolean"
            },
            "incidentLostTime": {
              "type": "boolean"
            },
            "incidentReportable": {
              "type": "boolean"
            },
            "incidentWorkRelated": {
              "type": "boolean"
            },
            "investigation": {
              "type": "boolean"
            },
            "investigationDate": {
              "type": "string",
              "format": "date"
            },
            "investigationFindings": {
              "type": "string"
            },
            "investigationRootCause": {
              "type": "string"
            },
            "investigationReason": {
              "type": "string"
            },
            "investigationFurtherReason": {
              "type": "string"
            },
            "investigationOutcome": {
              "type": "string"
            },
            "investigationActionsTaken": {
              "type": "string"
            },
            "investigationRecommendations": {
              "type": "string"
            },
            "violent": {
              "type": "boolean"
            },
            "violentAssaultType": {
              "type": "string"
            },
            "violentAssaultedBefore": {
              "type": "boolean"
            },
            "violentNumAssailants": {
              "type": "integer"
            },
            "violentAssailantStatus": {
              "type": "string"
            },
            "violentWeaponType": {
              "type": "string"
            },
            "violentRacialType": {
              "type": "string"
            },
            "violentTraumaLevel": {
              "type": "string"
            },
            "violentCounselling": {
              "type": "boolean"
            },
            "violentPoliceNotified": {
              "type": "boolean"
            },
            "violentPoliceCrimeRef": {
              "type": "string"
            },
            "healthAffected": {
              "type": "boolean"
            },
            "healthTreatment": {
              "type": "string"
            },
            "healthDoctorComments": {
              "type": "string"
            },
            "youngInvolved": {
              "type": "boolean"
            },
            "youngType": {
              "type": "string"
            },
            "youngActivity": {
              "type": "string"
            },
            "youngParentsInformed": {
              "type": "boolean"
            },
            "youngExistingMedical": {
              "type": "boolean"
            },
            "personInvolved": {
              "type": "boolean"
            },
            "personEmployee": {
              "type": "boolean"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personTitle": {
              "type": "string"
            },
            "personAgeRange": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personSex": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "personEmail": {
              "type": "string"
            },
            "personJobTitle": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personOrgUnitName": {
              "type": "string"
            },
            "personLocation": {
              "type": "string"
            },
            "environmentalType": {
              "type": "string"
            },
            "environmentalTypeOther": {
              "type": "string"
            },
            "environmentalRelease": {
              "type": "string"
            },
            "environmentalReleaseTo": {
              "type": "string"
            },
            "environmentalWitness": {
              "type": "string"
            },
            "environmentalAction": {
              "type": "string"
            },
            "equipInvolved": {
              "type": "boolean"
            },
            "equipReference": {
              "type": "string"
            },
            "equipName": {
              "type": "string"
            },
            "equipDescription": {
              "type": "string"
            },
            "equipSecondInvolved": {
              "type": "boolean"
            },
            "equipSecondReference": {
              "type": "string"
            },
            "equipSecondName": {
              "type": "string"
            },
            "equipSecondDescription": {
              "type": "string"
            },
            "riskPotentialDetails": {
              "type": "string"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "estLostTime": {
              "type": "number"
            },
            "estLostCost": {
              "type": "number"
            },
            "estLostTimeCost": {
              "type": "number"
            },
            "actLostTime": {
              "type": "number"
            },
            "actLostCost": {
              "type": "number"
            },
            "actLostTimeCost": {
              "type": "number"
            },
            "estReplaceTime": {
              "type": "number"
            },
            "estReplaceCost": {
              "type": "number"
            },
            "estReplaceTimeCost": {
              "type": "number"
            },
            "actReplaceTime": {
              "type": "number"
            },
            "actReplaceCost": {
              "type": "number"
            },
            "actReplaceTimeCost": {
              "type": "number"
            },
            "estProductionUnit": {
              "type": "number"
            },
            "estProductionCost": {
              "type": "number"
            },
            "estProductionTime": {
              "type": "number"
            },
            "actProductionUnit": {
              "type": "number"
            },
            "actProductionCost": {
              "type": "number"
            },
            "actProductionTime": {
              "type": "number"
            },
            "estEquipReplace": {
              "type": "number"
            },
            "estEquipRepair": {
              "type": "number"
            },
            "estEquipHire": {
              "type": "number"
            },
            "actEquipReplace": {
              "type": "number"
            },
            "actEquipRepair": {
              "type": "number"
            },
            "actEquipHire": {
              "type": "number"
            },
            "estFinancialClaim": {
              "type": "number"
            },
            "estFinancialFine": {
              "type": "number"
            },
            "actFinancialClaim": {
              "type": "number"
            },
            "actFinancialFine": {
              "type": "number"
            },
            "estMaterialCost": {
              "type": "number"
            },
            "actMaterialCost": {
              "type": "number"
            },
            "totalCostEstimate": {
              "type": "number"
            },
            "totalCostActual": {
              "type": "number"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetProceduralGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "auditLocation": {
              "type": "string"
            },
            "auditLocality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "auditDate": {
              "type": "string",
              "format": "date"
            },
            "auditTemplateStatus": {
              "type": "string"
            },
            "auditDescription": {
              "type": "string"
            },
            "auditNumOfPeople": {
              "type": "integer"
            },
            "auditTimeSpent": {
              "type": "number"
            },
            "scoreMax": {
              "type": "integer"
            },
            "scoreMaxPossible": {
              "type": "integer"
            },
            "scoreActual": {
              "type": "integer"
            },
            "scoreActualReview": {
              "type": "integer"
            },
            "scorePercent": {
              "type": "number"
            },
            "scorePercentReview": {
              "type": "number"
            },
            "starRating": {
              "type": "integer"
            },
            "starRatingReview": {
              "type": "integer"
            },
            "auditeeForename": {
              "type": "string"
            },
            "auditeeSurname": {
              "type": "string"
            },
            "auditorForename": {
              "type": "string"
            },
            "auditorSurname": {
              "type": "string"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetHazardSpottingGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "hazardLocation": {
              "type": "string"
            },
            "hazardLocality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "hazardSpottedAt": {
              "type": "string",
              "format": "date-time"
            },
            "hazardReportedBy": {
              "type": "string"
            },
            "hazardReportedDate": {
              "type": "string",
              "format": "date"
            },
            "hazardType": {
              "type": "string"
            },
            "hazardTypeOther": {
              "type": "string"
            },
            "hazardSubType": {
              "type": "string"
            },
            "hazardStillPresent": {
              "type": "boolean"
            },
            "hazardDetails": {
              "type": "string"
            },
            "hazardComments": {
              "type": "string"
            },
            "resolutionRequired": {
              "type": "boolean"
            },
            "resolutionSteps": {
              "type": "string"
            },
            "resolutionDone": {
              "type": "boolean"
            },
            "resolutionDate": {
              "type": "string",
              "format": "date"
            },
            "potentialCauseInjury": {
              "type": "boolean"
            },
            "potentialDamageEquip": {
              "type": "boolean"
            },
            "potentialDamageProp": {
              "type": "boolean"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetPersonGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "personLocation": {
              "type": "string"
            },
            "personLocality": {
              "type": "string"
            },
            "isCurrent": {
              "type": "boolean"
            },
            "personType": {
              "type": "string"
            },
            "personTitle": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personJobTitle": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personManagerName": {
              "type": "string"
            },
            "personManagerPhone": {
              "type": "string"
            },
            "personAgeRange": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personNINumber": {
              "type": "string"
            },
            "personNationality": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personSex": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "personMobileNumber": {
              "type": "string"
            },
            "personEmail": {
              "type": "string"
            },
            "personNextOfKinName": {
              "type": "string"
            },
            "personNextOfKinRelationship": {
              "type": "string"
            },
            "personNextOfKinAddress1": {
              "type": "string"
            },
            "personNextOfKinAddress2": {
              "type": "string"
            },
            "personNextOfKinAddress3": {
              "type": "string"
            },
            "personNextOfKinTown": {
              "type": "string"
            },
            "personNextofKinCounty": {
              "type": "string"
            },
            "personNextOfKinPostCode": {
              "type": "string"
            },
            "personNextOfKinPhone": {
              "type": "string"
            },
            "personNextOfKinMobile": {
              "type": "string"
            },
            "personNextOfKinEmail": {
              "type": "string"
            },
            "personNotes": {
              "type": "string"
            },
            "personAdditional1": {
              "type": "string"
            },
            "personAdditional2": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetGeneralRiskGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "riskLocation": {
              "type": "string"
            },
            "riskLocality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectRiskRecordId": {
              "type": "string"
            },
            "riskDescription": {
              "type": "string"
            },
            "riskConclusion": {
              "type": "string"
            },
            "riskAssessorName": {
              "type": "string"
            },
            "riskAssessmentDate": {
              "type": "string",
              "format": "date"
            },
            "riskPeopleExposed": {
              "type": "integer"
            },
            "riskTimeSpent": {
              "type": "number"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetTrainingGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "trainingLocation": {
              "type": "string"
            },
            "trainingLocality": {
              "type": "string"
            },
            "trainingRequiredBy": {
              "type": "string",
              "format": "date"
            },
            "trainingCompletedOn": {
              "type": "string",
              "format": "date"
            },
            "trainingStatus": {
              "type": "string"
            },
            "trainingComments": {
              "type": "string"
            },
            "trainingEmployeeForename": {
              "type": "string"
            },
            "trainingEmployeeSurname": {
              "type": "string"
            },
            "trainingEmployeeEmail": {
              "type": "string"
            },
            "trainingCourseName": {
              "type": "string"
            },
            "trainingCourseSubject": {
              "type": "string"
            },
            "trainingCourseDate": {
              "type": "string",
              "format": "date"
            },
            "trainingCourseCost": {
              "type": "number"
            },
            "trainingCouseProvider": {
              "type": "string"
            },
            "trainingCourseDuration": {
              "type": "string"
            },
            "trainingCourseHeldBy": {
              "type": "string"
            },
            "trainingCourseRenewDate": {
              "type": "string",
              "format": "date"
            },
            "trainingCourseTrainingType": {
              "type": "string"
            },
            "trainingCourseScheduleType": {
              "type": "string"
            },
            "trainingCourseScheduleInterval": {
              "type": "integer"
            },
            "trainingCourseLocation": {
              "type": "string"
            },
            "trainingDidNotAttend": {
              "type": "boolean"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetEquipmentGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "equipmentLocation": {
              "type": "string"
            },
            "equipmentLocality": {
              "type": "string"
            },
            "equipmentName": {
              "type": "string"
            },
            "equipmentModel": {
              "type": "string"
            },
            "equipmentDescription": {
              "type": "string"
            },
            "equipmentSerialNumber": {
              "type": "string"
            },
            "equipmentAssetNumber": {
              "type": "string"
            },
            "equipmentCEMark": {
              "type": "boolean"
            },
            "equipmentPurchasedDate": {
              "type": "string",
              "format": "date"
            },
            "equipmentValue": {
              "type": "number"
            },
            "equipmentInformationLog": {
              "type": "string"
            },
            "equipmentNotes": {
              "type": "string"
            },
            "equipmentType": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetOrgUnitGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "orgUnitCreatedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "orgUnitModifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitDetails": {
              "type": "string"
            },
            "orgUnitEnabled": {
              "type": "boolean"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "orgUnitParentId": {
              "type": "string"
            },
            "orgUnitParentName": {
              "type": "string"
            },
            "orgUnitParentExternalId": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetSafeUnsafeGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "observationDocumentReference": {
              "type": "string"
            },
            "observationTitle": {
              "type": "string"
            },
            "observationCategory": {
              "type": "string"
            },
            "observationType": {
              "type": "string"
            },
            "observationOccurredAt": {
              "type": "string",
              "format": "date-time"
            },
            "observationPlaceDetails": {
              "type": "string"
            },
            "observationDescription": {
              "type": "string"
            },
            "observationImmediateAction": {
              "type": "string"
            },
            "observationRecommendation": {
              "type": "string"
            },
            "observationReportedBy": {
              "type": "string"
            },
            "observationConclusion": {
              "type": "string"
            },
            "observationClosedAt": {
              "type": "string",
              "format": "date"
            },
            "observationClosedBy": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetFireRiskGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectRiskRecordId": {
              "type": "string"
            },
            "approvedForPortal": {
              "type": "boolean"
            },
            "fireRiskDescription": {
              "type": "string"
            },
            "fireRiskAssessorName": {
              "type": "string"
            },
            "fireRiskAssessmentDate": {
              "type": "string",
              "format": "date"
            },
            "fireRiskOfficer": {
              "type": "string"
            },
            "fireRiskResponsiblePerson": {
              "type": "string"
            },
            "fireRiskPublicRisk": {
              "type": "boolean"
            },
            "fireRiskSpecialConsiderations": {
              "type": "string"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetSupplierContractorGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "supplierCode": {
              "type": "string"
            },
            "supplierName": {
              "type": "string"
            },
            "supplierTelephone": {
              "type": "string"
            },
            "supplierEmail": {
              "type": "string"
            },
            "supplierFax": {
              "type": "string"
            },
            "supplierAddress1": {
              "type": "string"
            },
            "supplierAddress2": {
              "type": "string"
            },
            "supplierAddress3": {
              "type": "string"
            },
            "supplierTown": {
              "type": "string"
            },
            "supplierCounty": {
              "type": "string"
            },
            "supplierPostcode": {
              "type": "string"
            },
            "supplierContactName": {
              "type": "string"
            },
            "supplierContactTelephone": {
              "type": "string"
            },
            "supplierContactEmail": {
              "type": "string"
            },
            "supplierHSOfficerName": {
              "type": "string"
            },
            "supplierHSOfficerTelephone": {
              "type": "string"
            },
            "supplierHSOfficerEmail": {
              "type": "string"
            },
            "supplierLineManagerName": {
              "type": "string"
            },
            "supplierLineManagerTelephone": {
              "type": "string"
            },
            "supplierLineManagerEmail": {
              "type": "string"
            },
            "supplierSponsorName": {
              "type": "string"
            },
            "supplierSponsorTelephone": {
              "type": "string"
            },
            "supplierSponsorEmail": {
              "type": "string"
            },
            "supplierProductsSupplied": {
              "type": "string"
            },
            "supplierDetailsLastWork": {
              "type": "string"
            },
            "supplierLastOrderDate": {
              "type": "string",
              "format": "date"
            },
            "supplierUndertakenWork": {
              "type": "string"
            },
            "supplierApprovalDate": {
              "type": "string",
              "format": "date"
            },
            "supplierAdditionalInformation": {
              "type": "string"
            },
            "supplierComments": {
              "type": "string"
            },
            "supplierStarRating": {
              "type": "string"
            },
            "suppierInductionType": {
              "type": "string"
            },
            "SupplierStatus": {
              "type": "string"
            },
            "supplierAdditionalDate1": {
              "type": "string",
              "format": "date"
            },
            "supplierAdditionalDate2": {
              "type": "string",
              "format": "date"
            },
            "supplierAreasOfAvailability": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetIncidentAnalysisGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "incidentAnalysisYear": {
              "type": "integer"
            },
            "incidentAnalysisMonth": {
              "type": "string"
            },
            "incidentAnalysisDataInterval": {
              "type": "string"
            },
            "incidentAnalysisSpecifiedInterval": {
              "type": "boolean"
            },
            "incidentAnalysisFromDate": {
              "type": "string"
            },
            "incidentAnalysisToDate": {
              "type": "string"
            },
            "incidentAnalysisNumberEmployees": {
              "type": "number"
            },
            "incidentAnalysisManHours": {
              "type": "number"
            },
            "incidentAnalysisLifetimeHours": {
              "type": "number"
            },
            "incidentAnalysisManualInput": {
              "type": "boolean"
            },
            "incidentAnalysisLostTimeAccidents": {
              "type": "number"
            },
            "incidentAnalysisReportableAccidents": {
              "type": "number"
            },
            "incidentAnalysisTotalAccidents": {
              "type": "number"
            },
            "incidentAnalysisInjuryFrequencyRate": {
              "type": "number"
            },
            "incidentAnalysisIncidenceRate": {
              "type": "number"
            },
            "incidentAnalysisIncidentRate": {
              "type": "number"
            },
            "incidentAnalysisCascadeResults": {
              "type": "boolean"
            },
            "incidentAnalysisIsAutomated": {
              "type": "boolean"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetActionGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "actionOrgUnitName": {
              "type": "string"
            },
            "actionOrgUnitId": {
              "type": "string"
            },
            "actionOrgUnitExternalId": {
              "type": "string"
            },
            "actionModule": {
              "type": "string"
            },
            "actionModuleReference": {
              "type": "string"
            },
            "actionSubmodule": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateType": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "actionType": {
              "type": "string"
            },
            "actionHeader": {
              "type": "string"
            },
            "actionDetail": {
              "type": "string"
            },
            "actionDueDate": {
              "type": "string",
              "format": "date"
            },
            "actionOriginalDueDate": {
              "type": "string",
              "format": "date"
            },
            "actionIsArchive": {
              "type": "boolean"
            },
            "actionIsApproved": {
              "type": "boolean"
            },
            "actionIsComplete": {
              "type": "boolean"
            },
            "actionCompletePercent": {
              "type": "integer"
            },
            "actionCreatedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "actionModifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "actionCompletedAt": {
              "type": "string",
              "format": "date-time"
            },
            "actionApprovedAt": {
              "type": "string",
              "format": "date-time"
            },
            "actionRaisedByUser": {
              "type": "string"
            },
            "actionRaisedForUser": {
              "type": "string"
            },
            "actionCompletedByUser": {
              "type": "string"
            },
            "actionApprovedByUser": {
              "type": "string"
            },
            "actionModifiedByUser": {
              "type": "string"
            },
            "actionLastComment": {
              "type": "string"
            },
            "actionLastCommentUsername": {
              "type": "string"
            },
            "actionPriority": {
              "type": "string"
            },
            "actionCategory": {
              "type": "string"
            },
            "actionSubcategory": {
              "type": "string"
            },
            "actionCurrentStatus": {
              "type": "string"
            },
            "actionTimeTaken": {
              "type": "integer"
            },
            "actionSource": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetApprovalGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "approvalOrgUnitName": {
              "type": "string"
            },
            "approvalOrgUnitId": {
              "type": "string"
            },
            "approvalOrgUnitExternalId": {
              "type": "string"
            },
            "approvalModule": {
              "type": "string"
            },
            "approvalModuleReference": {
              "type": "string"
            },
            "approvalStage": {
              "type": "string"
            },
            "approvalIsApproved": {
              "type": "boolean"
            },
            "approvalCreatedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "approvalModifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "approvalStatusChangedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "approvalCurrentTask": {
              "type": "boolean"
            },
            "approvalCreatedByUser": {
              "type": "string"
            },
            "approvalApprovedByUser": {
              "type": "string"
            },
            "approvalModifiedByUser": {
              "type": "string"
            },
            "approvalAssignedToUser": {
              "type": "string"
            },
            "approvalDesignatedApprover": {
              "type": "string"
            },
            "approvalComment": {
              "type": "string"
            },
            "approvalDueDate": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "exportDatasetProjectRiskGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "approvedForPortal": {
              "type": "boolean"
            },
            "projectRiskDescription": {
              "type": "string"
            },
            "projectRiskAssessorName": {
              "type": "string"
            },
            "projectRiskAssessmentDate": {
              "type": "string",
              "format": "date"
            },
            "projectRiskAssessmentDetails": {
              "type": "string"
            },
            "projectRiskPeopleExposed": {
              "type": "integer"
            },
            "projectRiskConclusion": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetDrivingGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "drivingLicenceIssueNumber": {
              "type": "string"
            },
            "drivingLicenceValidFrom": {
              "type": "string",
              "format": "date"
            },
            "drivingLicenceValidTo": {
              "type": "string",
              "format": "date"
            },
            "drivingLicenceType": {
              "type": "string"
            },
            "drivingLicenceRequiredToDrive": {
              "type": "boolean"
            },
            "drivingLicenceHasHGV": {
              "type": "boolean"
            },
            "drivingLicenceHGVType": {
              "type": "string"
            },
            "drivingLicenceHGVExpiryDate": {
              "type": "string",
              "format": "date"
            },
            "drivingLicenceCategory": {
              "type": "string"
            },
            "drivingLicenceGroup": {
              "type": "string"
            },
            "drivingLicenceConvictions": {
              "type": "string"
            },
            "drivingLicenceComments": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personSex": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetActivityRiskGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectRiskRecordId": {
              "type": "string"
            },
            "approvedForPortal": {
              "type": "boolean"
            },
            "activityRiskCategory": {
              "type": "string"
            },
            "activityRiskDescription": {
              "type": "string"
            },
            "activityRiskAssessorReference": {
              "type": "string"
            },
            "activityRiskAssessmentForename": {
              "type": "string"
            },
            "activityRiskAssessmentSurname": {
              "type": "string"
            },
            "activityRiskAssessmentTeam": {
              "type": "string"
            },
            "activityRiskAssessmentDate": {
              "type": "string",
              "format": "date"
            },
            "activityRiskActivityDescription": {
              "type": "string"
            },
            "activityRiskNumberExposed": {
              "type": "integer"
            },
            "activityRiskPeopleExposed": {
              "type": "string"
            },
            "activityRiskOverallPotentialRisk": {
              "type": "integer"
            },
            "activityRiskOverallResidualRisk": {
              "type": "integer"
            },
            "activityRiskCostControlMeasures": {
              "type": "number"
            },
            "activityRiskIsAcceptable": {
              "type": "boolean"
            },
            "activityRiskConclusion": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetActHazConGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "hazardControlCategory": {
              "type": "string"
            },
            "hazardControlPhrases": {
              "type": "string"
            },
            "hazardControlWhoAtRisk": {
              "type": "string"
            },
            "hazardControlHowAtRisk": {
              "type": "string"
            },
            "hazardControlMeasures": {
              "type": "string"
            },
            "hazardControlAdditionalMeasures": {
              "type": "string"
            },
            "hazardControlOrderIndex": {
              "type": "integer"
            },
            "hazardControlPotentialFactorCaption": {
              "type": "string"
            },
            "hazardControlResidualFactorCaption": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetProjectGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectDescription": {
              "type": "string"
            },
            "projectManager": {
              "type": "string"
            },
            "projectStartDate": {
              "type": "string",
              "format": "date"
            },
            "projectEndDate": {
              "type": "string",
              "format": "date"
            },
            "projectEstimatedManHours": {
              "type": "integer"
            },
            "projectDuration": {
              "type": "integer"
            },
            "projectUPRN": {
              "type": "string"
            },
            "projectPropertyIdentifier": {
              "type": "string"
            },
            "projectAddress": {
              "type": "string"
            },
            "projectPostcode": {
              "type": "string"
            },
            "projectOwnership": {
              "type": "string"
            },
            "projectTenure": {
              "type": "string"
            },
            "projectNoOfFloors": {
              "type": "integer"
            },
            "projectFloorArea": {
              "type": "number"
            },
            "projectOccupancyCapacity": {
              "type": "integer"
            },
            "projectBuildingType": {
              "type": "string"
            },
            "projectField1Text50": {
              "type": "string"
            },
            "projectField2Text50": {
              "type": "string"
            },
            "projectField3Text50": {
              "type": "string"
            },
            "projectField4TextMax": {
              "type": "string"
            },
            "projectField5TextMax": {
              "type": "string"
            },
            "projectField6TextMax": {
              "type": "string"
            },
            "projectField7Date": {
              "type": "string",
              "format": "date"
            },
            "projectField8Date": {
              "type": "string",
              "format": "date"
            },
            "projectField9Date": {
              "type": "string",
              "format": "date"
            },
            "projectField10Integer": {
              "type": "integer"
            },
            "projectField11Integer": {
              "type": "integer"
            },
            "projectField12Integer": {
              "type": "integer"
            },
            "projectField13Decimal": {
              "type": "number"
            },
            "projectField14Decimal": {
              "type": "number"
            },
            "projectField15Decimal": {
              "type": "number"
            },
            "projectField16Dictionary": {
              "type": "string"
            },
            "projectField17Dictionary": {
              "type": "string"
            },
            "projectField18Dictionary": {
              "type": "string"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "userPOSTRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "username",
          "fullname",
          "email",
          "defaultOrgUnitExternalId"
        ],
        "properties": {
          "username": {
            "description": "Unique login 'username' for the user. This cannot contain ~`^*?:<>\"\\/| characters. If a user already exists with the matching 'username' this user's details will be updated to match those provided (where the provided details omit any optional fields these will be set to their default values).",
            "type": "string",
            "pattern": "^[^~`^*?:<>\"\\\\\\/|]+$",
            "minLength": 1,
            "maxLength": 35
          },
          "fullname": {
            "description": "The user's full name. This is the name that will be displayed in the UI.",
            "type": "string",
            "minLength": 1,
            "maxLength": 60
          },
          "email": {
            "description": "The user's email address. This must be a correctly formatted email address without the display name (i.e. just the actual email address). Email addresses must be unique across all users for the customer.",
            "type": "string",
            "minLength": 1,
            "maxLength": 75
          },
          "defaultOrgUnitExternalId": {
            "description": "The user's default organisation unit identified by its unique customer defined external ID",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "roles": {
            "description": "List of roles to be granted to this user for the specified organisation units. If this field is omitted or is empty then the user has no roles.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "roleExternalId",
                "orgUnitExternalId"
              ],
              "properties": {
                "roleExternalId": {
                  "description": "The unique customer defined external ID of the role to be granted to the organisation unit identified",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                },
                "orgUnitExternalId": {
                  "description": "The unique customer defined external ID of the organisation unit to which the specified role is to be granted to the user",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                },
                "includeChildUnits": {
                  "description": "Whether to include all child organisation units of the specified organisation unit in the role grant. If this field is omitted then the default is to NOT include child organisation units.",
                  "type": "boolean"
                }
              }
            }
          },
          "assureGoPlusOnly": {
            "description": "Whether to restrict the user to accessing Assure Go+ only. If this field is omitted then the default is access to Assure and Assure Go+.",
            "type": "boolean"
          },
          "isManager": {
            "description": "Is the user a manager. If this field is omitted then the user is NOT a manager.",
            "type": "boolean"
          },
          "managerUsername": {
            "description": "The unique login 'username' of this user's manager. If this field is omitted then the user is NOT associated with a manager.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "dateFormat": {
            "description": "The date format to use when showing dates to the user. If this field is present its value must be either DAY_FIRST (which equates to the format 'DD/MM/YYYY'), or MONTH_FIRST (which equates to the format 'MM/DD/YYYY'). If omitted the default format is DAY_FIRST.",
            "type": "string",
            "enum": [
              "DAY_FIRST",
              "MONTH_FIRST"
            ]
          },
          "languageCode": {
            "description": "The language of the user as expressed as an ISO 639-1 two-digit language code followed by a dash followed by an ISO 3166 country code, e.g. en-US. If this field is omitted then the customer's default language is used.",
            "type": "string",
            "minLength": 5,
            "maxLength": 5
          },
          "timezoneName": {
            "description": "The timezone of the user expressed as the Microsoft Windows timezone name. If this field is omitted then the customer's default timezone is used.",
            "type": "string",
            "enum": [
              "Dateline Standard Time",
              "UTC-11",
              "Aleutian Standard Time ",
              "Hawaiian Standard Time",
              "Marquesas Standard Time",
              "Alaskan Standard Time",
              "UTC-09",
              "Pacific Standard Time (Mexico)",
              "UTC-08",
              "Pacific Standard Time",
              "US Mountain Standard Time",
              "Mountain Standard Time (Mexico)",
              "Mountain Standard Time",
              "Yukon Standard Time",
              "Central America Standard Time",
              "Central Standard Time",
              "Easter Island Standard Time",
              "Central Standard Time (Mexico)",
              "Canada Central Standard Time",
              "SA Pacific Standard Time",
              "Eastern Standard Time (Mexico)",
              "Eastern Standard Time",
              "Haiti Standard Time",
              "Cuba Standard Time",
              "US Eastern Standard Time",
              "Turks And Caicos Standard Time",
              "Paraguay Standard Time",
              "Atlantic Standard Time",
              "Venezuela Standard Time",
              "Central Brazilian Standard Time",
              "SA Western Standard Time",
              "Pacific SA Standard Time",
              "Newfoundland Standard Time",
              "Tocantins Standard Time",
              "E. South America Standard Time",
              "SA Eastern Standard Time",
              "Argentina Standard Time",
              "Greenland Standard Time",
              "Montevideo Standard Time",
              "Magallanes Standard Time",
              "Saint Pierre Standard Time",
              "Bahia Standard Time",
              "UTC-02",
              "Mid-Atlantic Standard Time",
              "Azores Standard Time",
              "Cape Verde Standard Time",
              "UTC",
              "GMT Standard Time",
              "Greenwich Standard Time",
              "Sao Tome Standard Time",
              "Morocco Standard Time",
              "W. Europe Standard Time",
              "Central Europe Standard Time",
              "Romance Standard Time",
              "Central European Standard Time",
              "W. Central Africa Standard Time",
              "GTB Standard Time",
              "Middle East Standard Time",
              "Egypt Standard Time",
              "E. Europe Standard Time",
              "Syria Standard Time",
              "West Bank Standard Time",
              "South Africa Standard Time",
              "FLE Standard Time",
              "Israel Standard Time",
              "South Sudan Standard Time",
              "Kaliningrad Standard Time",
              "Sudan Standard Time",
              "Libya Standard Time",
              "Namibia Standard Time",
              "Jordan Standard Time",
              "Arabic Standard Time",
              "Turkey Standard Time",
              "Arab Standard Time",
              "Belarus Standard Time",
              "Russian Standard Time",
              "E. Africa Standard Time",
              "Volgograd Standard Time",
              "Iran Standard Time",
              "Arabian Standard Time",
              "Astrakhan Standard Time",
              "Azerbaijan Standard Time",
              "Russia Time Zone 3",
              "Mauritius Standard Time",
              "Saratov Standard Time",
              "Georgian Standard Time",
              "Caucasus Standard Time",
              "Afghanistan Standard Time",
              "West Asia Standard Time",
              "Ekaterinburg Standard Time",
              "Pakistan Standard Time",
              "Qyzylorda Standard Time",
              "India Standard Time",
              "Sri Lanka Standard Time",
              "Nepal Standard Time",
              "Bangladesh Standard Time",
              "Central Asia Standard Time",
              "Omsk Standard Time",
              "Myanmar Standard Time",
              "SE Asia Standard Time",
              "Altai Standard Time",
              "W. Mongolia Standard Time",
              "North Asia Standard Time",
              "N. Central Asia Standard Time",
              "Tomsk Standard Time",
              "China Standard Time",
              "North Asia East Standard Time",
              "Singapore Standard Time",
              "W. Australia Standard Time",
              "Taipei Standard Time",
              "Ulaanbaatar Standard Time",
              "Aus Central W. Standard Time",
              "Transbaikal Standard Time",
              "Tokyo Standard Time",
              "North Korea Standard Time",
              "Korea Standard Time",
              "Yakutsk Standard Time",
              "Cen. Australia Standard Time",
              "AUS Central Standard Time",
              "E. Australia Standard Time",
              "AUS Eastern Standard Time",
              "West Pacific Standard Time",
              "Tasmania Standard Time",
              "Vladivostok Standard Time",
              "Lord Howe Standard Time",
              "Bougainville Standard Time ",
              "Russia Time Zone 10",
              "Magadan Standard Time",
              "Norfolk Standard Time",
              "Sakhalin Standard Time",
              "Central Pacific Standard Time",
              "Russia Time Zone 11",
              "New Zealand Standard Time",
              "UTC+12",
              "Fiji Standard Time",
              "Kamchatka Standard Time",
              "Chatham Islands Standard Time",
              "UTC+13",
              "Tonga Standard Time",
              "Samoa Standard Time",
              "Line Islands Standard Time"
            ]
          },
          "sendPasswordReset": {
            "description": "Whether to trigger a password reset link to be sent to the user. This field is ignored on creation (as on creation a password reset email is always sent). This field is ignored when single sign on is enabled. Otherwise if this field is present and set to true then a password reset link is automatically sent.",
            "type": "boolean"
          },
          "requirePasswordChange": {
            "description": "Whether to require the user to change their password next time they login. This field is ignored on creation (as a password reset email will be sent). This field is ignored when single sign on is enabled. This field is ignored if the 'sendPasswordReset' field is present and set to true. Otherwise if this field is present and set to true then the user will have to change their password the next time they login.",
            "type": "boolean"
          },
          "supervisorPrivilegeExternalId": {
            "description": "The user's Supervisor Privilege identified by its unique customer defined external ID",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "maskedOrgUnitExternalId": {
            "description": "The unique identifier for the customers Organisation Unit that they want to set as the upper limit of the Organisation Hierarchy that the user can see. The default org unit will be set to the masked parent if the supplied default org unit is not in the hierarchical structure of the masked parent.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          }
        }
      },
      "orgUnitPOSTRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "externalId",
          "name"
        ],
        "properties": {
          "externalId": {
            "description": "Unique externalId for the organisational unit. Each organisational unit must have a unique externalId. If an organisational unit already exists with the supplied externalId the organisational unit with the matching externalId will be updated.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "name": {
            "description": "The name of the organisational unit.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "details": {
            "description": "Details of the organisational unit.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "parentExternalId": {
            "description": "The externalId of the parent organisational unit. This field is required for all organisational units apart from the root organisation unit where it must be omitted. If this field is omitted for a non-root organisational unit you will receive a 400 response.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "incidentRegion": {
            "description": "The Incident region of the organisational unit. If this field is omitted or is empty then the default incident region is NONE.",
            "type": "string",
            "enum": [
              "NONE",
              "OSHA",
              "RIDDOR"
            ]
          },
          "applyIncidentRegionToChildUnits": {
            "description": "When updating an organisational unit this field specifies if the incident region should also apply to child units. During a create as an organisational unit has no children setting this field will not make any changes. If this field is omitted or is empty then the default is set to false.",
            "type": "boolean"
          },
          "frequencyRateRecording": {
            "description": "Whether an accident incident frequency rate should be created for this record. If this field is set to 'CREATE' a incident frequency rate record is created for this organisational unit and its child units that aren't excluded. If it is set to 'EXCLUDE', this organisational unit is excluded from all  incident frequency rate records. If it is set to 'INCLUDE', no incident frequency rate record is created specifically for this organisational unit but it will be included in parent records. If this field is omitted the default will be 'INCLUDE'.",
            "type": "string",
            "enum": [
              "INCLUDE",
              "CREATE",
              "EXCLUDE"
            ]
          },
          "defaultUsers": {
            "description": "Default users for the organisational unit.",
            "type": "object",
            "properties": {
              "assigneeUsername": {
                "description": "The default assignee's username. If this field is omitted or is empty then there is no default assignee for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "approverUsername": {
                "description": "The default approver's username. If this field is omitted or is empty then there is no default approver for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "reviewerUsername": {
                "description": "The default reviewer's username. If this field is omitted or is empty then there is no default reviewer for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "notificationRecipientUsername": {
                "description": "The default notification recipient's username. If this field is omitted or is empty then there is no default notification recipient for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "portalReminderRecipientUsername": {
                "description": "The default portal reminder recipient's username. If this field is omitted or is empty then there is no default portal reminder recipient for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "autoActionRecipientUsername": {
                "description": "The default automatic action recipient's username. If this field is omitted or is empty then there is no default auto action recipient for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "assureGoPlusActionRaisedByUsername": {
                "description": "The default assureGO+ Action raised By's username. If this field is omitted or is empty then there is no default user assigned to assure go plus action raised by for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "assureGoPlusActionRecipientUsername": {
                "description": "The default AssureGo+ action recipient's username. If this field is omitted or is empty then there is no default AssureGo+ action recipient for the organisational unit. ",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "humanResourcesRecipientUsername": {
                "description": "The default human resources recipient's username. If this field is omitted or is empty then there is no default human resources recipient for the organisational unit. ",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "alternativeHumanResourcesRecipientUsername": {
                "description": "The default alternative human resources recipient's username. If this field is omitted or is empty then there is no default alternative human resources recipient for the organisational unit. ",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "moduleOverrides": {
                "description": "Specifies if specific modules should have default users overriding the current defaults. If this field is omitted or is empty then there are no module overrides for this organisational unit.",
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "module"
                  ],
                  "properties": {
                    "module": {
                      "description": "The module that will have default user overrides for the organisational unit.",
                      "type": "string",
                      "enum": [
                        "project-risk",
                        "activity-risk",
                        "coshh",
                        "msds",
                        "ghs-sds",
                        "dse",
                        "manual-handling",
                        "fire-risk",
                        "noise",
                        "hazard-spotting",
                        "general-risk",
                        "incident-event",
                        "vehicle-incident",
                        "investigation",
                        "riddor",
                        "claim",
                        "incident-analysis",
                        "incident-rate",
                        "vehicle-register",
                        "person",
                        "employment",
                        "course",
                        "training",
                        "tna",
                        "tna-template",
                        "health",
                        "driving",
                        "equipment",
                        "equipment-maintenance",
                        "equipment-issue",
                        "lifting-equipment",
                        "electrical-testing",
                        "ppe",
                        "behavioural",
                        "safe-unsafe",
                        "procedural",
                        "notification-of-project",
                        "pretender",
                        "construction-phase",
                        "hs-file",
                        "supplier-contractor",
                        "environmental",
                        "air-emissions",
                        "release-to-water",
                        "land-contamination",
                        "waste-transfer",
                        "waste-material",
                        "waste-handler",
                        "project",
                        "f2508",
                        "f2508a",
                        "policy",
                        "aspect-impact",
                        "aspect-impact-component",
                        "aspect-impact-reporting",
                        "coshh-activity",
                        "osha-establishment",
                        "osha301",
                        "osha300a",
                        "job-hazard-analysis",
                        "covid19-management"
                      ]
                    },
                    "applyToChildUnits": {
                      "description": "Specifies if overrides should also apply to child units. If this field is omitted or is empty then the default is set to false.",
                      "type": "boolean"
                    },
                    "assigneeUsername": {
                      "description": "The default assignee's username. If this field is omitted or is empty then there will be no overriding assignee for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    },
                    "approverUsername": {
                      "description": "The default approver's username. If this field is omitted or is empty then there will be no overriding approver for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    },
                    "reviewerUsername": {
                      "description": "The default reviewer's username. If this field is omitted or is empty then there will be no overriding reviewer for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    },
                    "notificationRecipientUsername": {
                      "description": "The notification recipient's username. If this field is omitted or is empty then there will be no overriding notification recipient for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    },
                    "portalReminderRecipientUsername": {
                      "description": "The portal reminder recipient's username. If this field is omitted or is empty then there will be no overriding portal reminder recipient for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    },
                    "automaticActionRecipientUsername": {
                      "description": "The automatic action recipient's username. If this field is omitted or is empty then there will be no overriding automatic action recipient for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}