{
  "openapi": "3.0.1",
  "info": {
    "title": "Customer API",
    "version": "latest"
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "paths": {
    "/export/dataset/vehicle-incident": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetVehicleIncidentGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/vehicle-incident/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/incident-event": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIncidentEventGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/incident-event/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/pre-tender": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetPreTenderGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/pre-tender/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/procedural": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetProceduralGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/procedural/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/hazard-spotting": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetHazardSpottingGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/hazard-spotting/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/hs-file": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetHSFileGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/hs-file/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/person": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetPersonGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/person/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/general-risk": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetGeneralRiskGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/general-risk/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/training": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetTrainingGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/training/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/equipment": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetEquipmentGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/equipment/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/org-unit": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetOrgUnitGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/safe-unsafe": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetSafeUnsafeGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/safe-unsafe/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/fire-risk": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetFireRiskGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/fire-risk/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/supplier-contractor": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetSupplierContractorGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/supplier-contractor/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/incident-analysis": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIncidentAnalysisGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/incident-analysis/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/action": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetActionGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/aspect-impact": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetAspectImpactGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/aspect-impact/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/aspect-impact-component": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetAspectImpactComponentGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/aspect-impact-component/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/aspect-impact-reporting": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetAspectImpactReportingGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/aspect-impact-reporting/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/approval": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetApprovalGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/project-risk": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetProjectRiskGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/project-risk/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/driving": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetDrivingGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/driving/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/activity-risk": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetActivityRiskGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/activity-risk/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/act-haz-con": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetActHazConGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/project": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetProjectGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/project/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/air-emissions": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetAirEmissionsGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/air-emissions/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/land-contamination": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetLandContaminationGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/land-contamination/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/release-to-water": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetReleaseToWaterGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/release-to-water/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/survey-sample": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetSurveySampleGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/third-party": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetThirdPartyGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/environmental": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetEnvironmentalGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/environmental/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/waste-detail": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetWasteDetailGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/waste-handler": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetWasteHandlerGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/waste-handler/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/waste-material": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetWasteMaterialGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/waste-material/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/waste-transfer": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetWasteTransferGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/waste-transfer/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/behavioural": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetBehaviouralGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/behavioural/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/insurance-details": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetInsuranceDetailsGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/scope-of-service": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetScopeOfServiceGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/injury-classification": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetInjuryClassificationGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/claim": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetClaimGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/claim/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/construction-phase": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetConstructionPhaseGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/construction-phase/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/notification-of-project": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetNotificationOfProjectGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/notification-of-project/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/electrical-testing": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetElectricalTestingGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/electrical-testing/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/lifting-equip": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetLiftingEquipGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/lifting-equip/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/equip-issue": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetEquipIssueGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/equip-issue/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/investigation": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetInvestigationGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/investigation/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/ppe": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetPpeGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/ppe/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/osha300a": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetOsha300aGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/osha300a/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/osha301": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetOsha301GETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/osha301/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/equip-maintenance": {
      "get": {
        "description": "Retrieve the most recent records for this module in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines, JSON (deprecated) or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of module records. Contents are JSON-lines, JSON (deprecated) or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetEquipMaintenanceGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/export/dataset/equip-maintenance/iq": {
      "get": {
        "description": "Retrieve the most recent IQ answers for this module. This API is only intended to be used to extract the dataset export when it has been refreshed on a daily-basis. It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is to be visualised/processed. Note that exports are only available in the preconfigured format: JSON-lines or CSV.",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the IQ answers export. Contents are JSON-lines or CSV format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIqGETResponse"
                }
              },
              "application/jsonlines": {},
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/user": {
      "post": {
        "description": "Create/update a user using the provided details. If a user with matching 'username' already exists then they will be updated. If the user with matching 'username' is deactivated then they will be reactivated. The 'email' address must be unique, specifying a duplicate 'email' will result in an HTTP error 409.",
        "requestBody": {
          "description": "User details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userPOSTRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response - Successful creation or update of the user."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "409": {
            "description": "409 response - Conflict. A user with the specified email already exists."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/user/{username}": {
      "delete": {
        "description": "Disable the user in the specified in the URL path. This will disable the user meaning they can no longer login, however it does not delete the user record entirely as this can only be done manually via the UI once all records associated with the user have been reassigned.",
        "parameters": [
          {
            "description": "The unique login username for the user. URL escaping needs to be applied to the value of this path parameter.",
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response - Successfully disabled the user (note this will also be the response if specified User is already disabled or did not exist)."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/org-unit": {
      "post": {
        "description": "Create/update an organisational unit using the provided details. If an organisational unit with the provided 'externalId' already exists then that organisational unit will be updated. If the organisational unit with matching 'externalId' is deactivated then the organisational unit will be reactivated.",
        "requestBody": {
          "description": "Organisational unit details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orgUnitPOSTRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response - Successful creation or update of the organisational unit."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/org-unit/{externalId}": {
      "delete": {
        "description": "Disable the specified organisational unit in the URL path. This means that the specified organisational unit is not enabled. However, it does not delete the organisational unit entirely as this can only be done manually via the UI.",
        "parameters": [
          {
            "description": "The unique external id of the organisational unit.",
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response - Successfully disabled the organisational unit (note this will also be the response if specified organisational unit is already disabled or did not exist)."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/person-register": {
      "post": {
        "description": "Create/update a person register record. If a person register record unit with the provided 'reference' already exists then that person register record with the existing 'reference' is updated.",
        "requestBody": {
          "description": "Person register details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/personRegisterPOSTRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response - Successful creation or update of the person register record."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/person-register/{reference}": {
      "delete": {
        "description": "Deletes the person register record specified by the unique reference in the URL path.",
        "parameters": [
          {
            "description": "The unique reference of the person register record.",
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response - Successfully deleted the person register record (note this will also be the response if specified person register record is already deleted or did not exist)."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "409": {
            "description": "409 response - Reference provided is not unique for Person Register records."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/incident-analysis": {
      "post": {
        "description": "Create/update a incident analysis record. If a incident analysis record with the provided 'reference' already exists then that incident analysis record with the existing 'reference' is updated.",
        "requestBody": {
          "description": "Incident analysis details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/incidentAnalysisPOSTRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response - Successful creation or update of the incident analysis record."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "409": {
            "description": "409 response - Reference provided is not unique for Incident Analysis records."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/incident-analysis/{reference}": {
      "delete": {
        "description": "Deletes the incident analysis record specified by the unique reference in the URL path.",
        "parameters": [
          {
            "description": "The unique reference of the incident analysis record.",
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response - Successfully deleted the incident analysis record (note this will also be the response if specified incident analysis record is already deleted or did not exist)."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "409": {
            "description": "409 response - Reference provided is not unique for incident analysis records."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/claim": {
      "post": {
        "description": "Create/update a claims management record. If a claims management record with the provided 'reference' already exists then that claims management record with the existing 'reference' is updated.",
        "requestBody": {
          "description": "Claims management details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/claimPOSTRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response - Successful creation or update of the claims management record."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "409": {
            "description": "409 response - Reference provided is not unique for claims management records."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/claim/{reference}": {
      "delete": {
        "description": "Deletes the claims management record specified by the unique reference in the URL path.",
        "parameters": [
          {
            "description": "The unique reference of the claims management record.",
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response - Successfully deleted the claims management record (note this will also be the response if specified claims management record is already deleted or did not exist)."
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "409": {
            "description": "409 response - Reference provided is not unique for claims management records."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/ping": {
      "get": {
        "description": "DIAGNOSTIC USE ONLY - Provides confirmation that the API is reachable and that the API key is valid. Usage of this resource is throttled to prevent misuse (do not use this as part of regular integration processes).",
        "responses": {
          "200": {
            "description": "Return 200 response if the caller providers a valid API key"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/{proxy+}": {}
  },
  "components": {
    "schemas": {
      "exportDatasetIqGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "description": "The unique identifier for this IQ answer record.",
              "type": "string"
            },
            "recordId": {
              "description": "The unique identifier of the dataset record to which the answer relates. This will match the value of the 'id' field of the related record within the dataset export.",
              "type": "string"
            },
            "iqTemplateName": {
              "description": "The name of the IQ template which contains the question to which this answer was given.",
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "description": "The major version of the IQ template which contains the question to which this answer was given.",
              "type": "integer"
            },
            "iqSectionName": {
              "description": "The name of the section within the IQ template that contains the question to which this answer was given.",
              "type": "string"
            },
            "questionId": {
              "description": "The unique identifier of the question to which this answer was given. This can be used to identify answers that relate to the same question.",
              "type": "string"
            },
            "question": {
              "description": "The question text as shown to the user when the question was answered.",
              "type": "string"
            },
            "questionOrder": {
              "description": "The position in the order of the questions within the template. A higher value indicates that the question was further down the template. The format of the order value depends on whether the question is inside a section or not. For a question that is NOT in a section the value is just a positive integer indicating the order relative to other questions/sections. For a question that is in a section the format is 'X.Y' where X indicates the order of the section in respect to other sections and top level questions, and Y indicates the order of the question relative to the other questions in the section.",
              "type": "string"
            },
            "extractFieldName": {
              "description": "If an extract fieldname is associated with the question it will be included here.",
              "type": "string"
            },
            "answeredAt": {
              "description": "The UTC date and time at which the question was answered.",
              "type": "string",
              "format": "date-time"
            },
            "answerType": {
              "description": "This is a custom value that can be used to differentiate the answers if needed. Possible values: NUMERIC, TEXT, SINGLESELECT, MULTISELECT, SCORETEXT, CHECKLIST, DATETIME, DATE, TIME.",
              "type": "string"
            },
            "notApplicable": {
              "description": "A flag indicating if the question is marked as 'not applicable' or not.",
              "type": "boolean"
            },
            "answers": {
              "description": "An array of strings containing the answer value(s). The number of entries and format of the values in the array depends on the answer type. Refer to the API user documentation for full details of how to interpret this field.",
              "type": "object"
            },
            "comment": {
              "description": "The comment that was given against the answer.",
              "type": "string"
            }
          }
        }
      },
      "exportDatasetVehicleIncidentGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "incidentType": {
              "type": "string"
            },
            "incidentSeverity": {
              "type": "string"
            },
            "incidentLocationType": {
              "type": "string"
            },
            "incidentOccurredAt": {
              "type": "string",
              "format": "date-time"
            },
            "incidentOccurredAtType": {
              "type": "string"
            },
            "incidentReportedBy": {
              "type": "string"
            },
            "incidentReportedTo": {
              "type": "string"
            },
            "incidentReportedByDate": {
              "type": "string",
              "format": "date"
            },
            "incidentReportedToDate": {
              "type": "string",
              "format": "date"
            },
            "incidentDetails": {
              "type": "string"
            },
            "incidentWeather": {
              "type": "string"
            },
            "incidentWitnesses": {
              "type": "string"
            },
            "incidentConclusion": {
              "type": "string"
            },
            "responsibleParty": {
              "type": "string"
            },
            "responsiblePartyOther": {
              "type": "string"
            },
            "responsiblePartyWhy": {
              "type": "string"
            },
            "vehicleRegisterRecordId": {
              "type": "string"
            },
            "vehicleRegisterReference": {
              "type": "string"
            },
            "vehicleRegistrationPlate": {
              "type": "string"
            },
            "vehicleInsuranceRef": {
              "type": "string"
            },
            "vehicleType": {
              "type": "string"
            },
            "vehicleMake": {
              "type": "string"
            },
            "vehicleModel": {
              "type": "string"
            },
            "vehicleChassisNum": {
              "type": "string"
            },
            "vehicleGrossWeight": {
              "type": "string"
            },
            "vehicleYearManufactured": {
              "type": "integer"
            },
            "vehicleStatus": {
              "type": "string"
            },
            "vehicleDeliveredDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleTransferredDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleMOTDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleInspectedDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleServicedDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleRegisterOrgUnitRecordId": {
              "type": "string"
            },
            "vehicleRegisterOrgUnitName": {
              "type": "string"
            },
            "vehicleUnattended": {
              "type": "boolean"
            },
            "vehicleStationary": {
              "type": "boolean"
            },
            "vehicleLights": {
              "type": "string"
            },
            "vehicleSpeed": {
              "type": "string"
            },
            "vehicleNumOfPassengers": {
              "type": "string"
            },
            "vehiclePassengerDetails": {
              "type": "string"
            },
            "vehicleSeatBeltsFitted": {
              "type": "boolean"
            },
            "vehicleSeatBeltsInUse": {
              "type": "boolean"
            },
            "vehicleUsedWithPermission": {
              "type": "boolean"
            },
            "vehicleNoPermissionDetails": {
              "type": "string"
            },
            "vehicleDamageDetails": {
              "type": "string"
            },
            "vehicleWhereInspect": {
              "type": "string"
            },
            "otherVehicles": {
              "type": "string"
            },
            "otherVehicleLights": {
              "type": "string"
            },
            "otherVehicleSpeed": {
              "type": "string"
            },
            "trailer": {
              "type": "boolean"
            },
            "trailerIdNumber": {
              "type": "string"
            },
            "trailerMake": {
              "type": "string"
            },
            "trailerModel": {
              "type": "string"
            },
            "trailerStatus": {
              "type": "string"
            },
            "trailerOwnerDetails": {
              "type": "string"
            },
            "trailerNatureOfLoad": {
              "type": "string"
            },
            "roadType": {
              "type": "string"
            },
            "roadSpeedLimit": {
              "type": "string"
            },
            "roadState": {
              "type": "string"
            },
            "roadWidth": {
              "type": "string"
            },
            "roadStreetLightsOn": {
              "type": "boolean"
            },
            "policeAttended": {
              "type": "boolean"
            },
            "policeOfficerName": {
              "type": "string"
            },
            "policeStationName": {
              "type": "string"
            },
            "policeForceName": {
              "type": "string"
            },
            "policeProsecutionWarning": {
              "type": "boolean"
            },
            "investigation": {
              "type": "boolean"
            },
            "investigationRecordId": {
              "type": "string"
            },
            "investigationReference": {
              "type": "string"
            },
            "investigationDate": {
              "type": "string",
              "format": "date"
            },
            "investigationFindings": {
              "type": "string"
            },
            "investigationRootCause": {
              "type": "string"
            },
            "investigationReason": {
              "type": "string"
            },
            "investigationFurtherReason": {
              "type": "string"
            },
            "investigationOutcome": {
              "type": "string"
            },
            "investigationActionsTaken": {
              "type": "string"
            },
            "investigationRecommendations": {
              "type": "string"
            },
            "personType": {
              "type": "string"
            },
            "personTypeOther": {
              "type": "string"
            },
            "supplierContractorRecordId": {
              "type": "string"
            },
            "supplierContractorReference": {
              "type": "string"
            },
            "supplierContractorAddress1": {
              "type": "string"
            },
            "supplierContractorAddress2": {
              "type": "string"
            },
            "supplierContractorAddress3": {
              "type": "string"
            },
            "supplierContractorTown": {
              "type": "string"
            },
            "supplierContractorCounty": {
              "type": "string"
            },
            "supplierContractorPostcode": {
              "type": "string"
            },
            "supplierContractorPhoneNumber": {
              "type": "string"
            },
            "personRecordId": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personTitle": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personSex": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "personLicenceType": {
              "type": "string"
            },
            "personLicenceNumber": {
              "type": "string"
            },
            "personLicenceIssue": {
              "type": "string"
            },
            "personLicenceValidDate": {
              "type": "string",
              "format": "date"
            },
            "personLicenceExpireDate": {
              "type": "string",
              "format": "date"
            },
            "personLicenceCategory": {
              "type": "string"
            },
            "personLicenceGroup": {
              "type": "string"
            },
            "personDriverDetails": {
              "type": "string"
            },
            "personInjured": {
              "type": "boolean"
            },
            "personTakenToHospital": {
              "type": "string"
            },
            "personDetained": {
              "type": "string"
            },
            "personInjuryDetails": {
              "type": "string"
            },
            "environmentalType": {
              "type": "string"
            },
            "environmentalTypeOther": {
              "type": "string"
            },
            "environmentalRelease": {
              "type": "string"
            },
            "environmentalReleaseTo": {
              "type": "string"
            },
            "environmentalWitness": {
              "type": "string"
            },
            "environmentalAction": {
              "type": "string"
            },
            "estLostTime": {
              "type": "number"
            },
            "estLostCost": {
              "type": "number"
            },
            "estLostTimeCost": {
              "type": "number"
            },
            "actLostTime": {
              "type": "number"
            },
            "actLostCost": {
              "type": "number"
            },
            "actLostTimeCost": {
              "type": "number"
            },
            "estReplaceTime": {
              "type": "number"
            },
            "estReplaceCost": {
              "type": "number"
            },
            "estReplaceTimeCost": {
              "type": "number"
            },
            "actReplaceTime": {
              "type": "number"
            },
            "actReplaceCost": {
              "type": "number"
            },
            "actReplaceTimeCost": {
              "type": "number"
            },
            "estProductionUnit": {
              "type": "number"
            },
            "estProductionCost": {
              "type": "number"
            },
            "estProductionTime": {
              "type": "number"
            },
            "actProductionUnit": {
              "type": "number"
            },
            "actProductionCost": {
              "type": "number"
            },
            "actProductionTime": {
              "type": "number"
            },
            "estEquipReplace": {
              "type": "number"
            },
            "estEquipRepair": {
              "type": "number"
            },
            "estEquipHire": {
              "type": "number"
            },
            "actEquipReplace": {
              "type": "number"
            },
            "actEquipRepair": {
              "type": "number"
            },
            "actEquipHire": {
              "type": "number"
            },
            "estFinancialClaim": {
              "type": "number"
            },
            "estFinancialFine": {
              "type": "number"
            },
            "actFinancialClaim": {
              "type": "number"
            },
            "actFinancialFine": {
              "type": "number"
            },
            "estMaterialCost": {
              "type": "number"
            },
            "actMaterialCost": {
              "type": "number"
            },
            "totalCostEstimate": {
              "type": "number"
            },
            "totalCostActual": {
              "type": "number"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetIncidentEventGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "vehicleIncidentRecordId": {
              "type": "string"
            },
            "vehicleIncidentReference": {
              "type": "string"
            },
            "incidentType": {
              "type": "string"
            },
            "incidentSubType": {
              "type": "string"
            },
            "incidentThirdLevel": {
              "type": "string"
            },
            "incidentTypeOther": {
              "type": "string"
            },
            "incidentDangerousType": {
              "type": "string"
            },
            "incidentSeverity": {
              "type": "string"
            },
            "incidentStatus": {
              "type": "string"
            },
            "incidentOccurredAt": {
              "type": "string",
              "format": "date-time"
            },
            "incidentOccurredAtType": {
              "type": "string"
            },
            "incidentReportedBy": {
              "type": "string"
            },
            "incidentReportedTo": {
              "type": "string"
            },
            "incidentReportedToContact": {
              "type": "string"
            },
            "incidentReportedByDate": {
              "type": "string",
              "format": "date"
            },
            "incidentReportedToDate": {
              "type": "string",
              "format": "date"
            },
            "incidentStartAbsenceDate": {
              "type": "string",
              "format": "date"
            },
            "incidentReturnToWorkDate": {
              "type": "string",
              "format": "date"
            },
            "incidentDetails": {
              "type": "string"
            },
            "incidentNearMiss": {
              "type": "boolean"
            },
            "incidentLostTime": {
              "type": "boolean"
            },
            "incidentReportable": {
              "type": "boolean"
            },
            "incidentWorkRelated": {
              "type": "boolean"
            },
            "investigation": {
              "type": "boolean"
            },
            "investigationRecordId": {
              "type": "string"
            },
            "investigationReference": {
              "type": "string"
            },
            "investigationDate": {
              "type": "string",
              "format": "date"
            },
            "investigationFindings": {
              "type": "string"
            },
            "investigationRootCause": {
              "type": "string"
            },
            "investigationReason": {
              "type": "string"
            },
            "investigationFurtherReason": {
              "type": "string"
            },
            "investigationOutcome": {
              "type": "string"
            },
            "investigationActionsTaken": {
              "type": "string"
            },
            "investigationRecommendations": {
              "type": "string"
            },
            "violent": {
              "type": "boolean"
            },
            "violentAssaultType": {
              "type": "string"
            },
            "violentAssaultedBefore": {
              "type": "boolean"
            },
            "violentNumAssailants": {
              "type": "integer"
            },
            "violentAssailantStatus": {
              "type": "string"
            },
            "violentWeaponType": {
              "type": "string"
            },
            "violentRacialType": {
              "type": "string"
            },
            "violentTraumaLevel": {
              "type": "string"
            },
            "violentCounselling": {
              "type": "boolean"
            },
            "violentPoliceNotified": {
              "type": "boolean"
            },
            "violentPoliceCrimeRef": {
              "type": "string"
            },
            "healthAffected": {
              "type": "boolean"
            },
            "healthTreatment": {
              "type": "string"
            },
            "healthDoctorComments": {
              "type": "string"
            },
            "youngInvolved": {
              "type": "boolean"
            },
            "youngType": {
              "type": "string"
            },
            "youngActivity": {
              "type": "string"
            },
            "youngParentsInformed": {
              "type": "boolean"
            },
            "youngExistingMedical": {
              "type": "boolean"
            },
            "personInvolved": {
              "type": "boolean"
            },
            "personEmployee": {
              "type": "boolean"
            },
            "personRecordId": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personTitle": {
              "type": "string"
            },
            "personAgeRange": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personSex": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "personEmail": {
              "type": "string"
            },
            "personJobTitle": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personOrgUnitRecordId": {
              "type": "string"
            },
            "personOrgUnitName": {
              "type": "string"
            },
            "personLocation": {
              "type": "string"
            },
            "environmentalType": {
              "type": "string"
            },
            "environmentalTypeOther": {
              "type": "string"
            },
            "environmentalRelease": {
              "type": "string"
            },
            "environmentalReleaseTo": {
              "type": "string"
            },
            "environmentalWitness": {
              "type": "string"
            },
            "environmentalAction": {
              "type": "string"
            },
            "equipInvolved": {
              "type": "boolean"
            },
            "equipRecordId": {
              "type": "string"
            },
            "equipReference": {
              "type": "string"
            },
            "equipName": {
              "type": "string"
            },
            "equipDescription": {
              "type": "string"
            },
            "equipSecondInvolved": {
              "type": "boolean"
            },
            "equipSecondRecordId": {
              "type": "string"
            },
            "equipSecondReference": {
              "type": "string"
            },
            "equipSecondName": {
              "type": "string"
            },
            "equipSecondDescription": {
              "type": "string"
            },
            "riskPotentialDetails": {
              "type": "string"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "estLostTime": {
              "type": "number"
            },
            "estLostCost": {
              "type": "number"
            },
            "estLostTimeCost": {
              "type": "number"
            },
            "actLostTime": {
              "type": "number"
            },
            "actLostCost": {
              "type": "number"
            },
            "actLostTimeCost": {
              "type": "number"
            },
            "estReplaceTime": {
              "type": "number"
            },
            "estReplaceCost": {
              "type": "number"
            },
            "estReplaceTimeCost": {
              "type": "number"
            },
            "actReplaceTime": {
              "type": "number"
            },
            "actReplaceCost": {
              "type": "number"
            },
            "actReplaceTimeCost": {
              "type": "number"
            },
            "estProductionUnit": {
              "type": "number"
            },
            "estProductionCost": {
              "type": "number"
            },
            "estProductionTime": {
              "type": "number"
            },
            "actProductionUnit": {
              "type": "number"
            },
            "actProductionCost": {
              "type": "number"
            },
            "actProductionTime": {
              "type": "number"
            },
            "estEquipReplace": {
              "type": "number"
            },
            "estEquipRepair": {
              "type": "number"
            },
            "estEquipHire": {
              "type": "number"
            },
            "actEquipReplace": {
              "type": "number"
            },
            "actEquipRepair": {
              "type": "number"
            },
            "actEquipHire": {
              "type": "number"
            },
            "estFinancialClaim": {
              "type": "number"
            },
            "estFinancialFine": {
              "type": "number"
            },
            "actFinancialClaim": {
              "type": "number"
            },
            "actFinancialFine": {
              "type": "number"
            },
            "estMaterialCost": {
              "type": "number"
            },
            "actMaterialCost": {
              "type": "number"
            },
            "totalCostEstimate": {
              "type": "number"
            },
            "totalCostActual": {
              "type": "number"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetPreTenderGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "preTenderFileSigned": {
              "type": "string"
            },
            "preTenderFileDated": {
              "type": "string",
              "format": "date"
            },
            "notificationOfProjectRecordId": {
              "type": "string"
            },
            "notificationOfProjectReference": {
              "type": "string"
            },
            "supplierContractorRecordId": {
              "type": "string"
            },
            "supplierContractorReference": {
              "type": "string"
            },
            "supplierContractorName": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetProceduralGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "auditDate": {
              "type": "string",
              "format": "date"
            },
            "auditTemplateStatus": {
              "type": "string"
            },
            "auditDescription": {
              "type": "string"
            },
            "auditNumOfPeople": {
              "type": "integer"
            },
            "auditTimeSpent": {
              "type": "number"
            },
            "scoreMax": {
              "type": "integer"
            },
            "scoreMaxPossible": {
              "type": "integer"
            },
            "scoreActual": {
              "type": "integer"
            },
            "scoreActualReview": {
              "type": "integer"
            },
            "scorePercent": {
              "type": "number"
            },
            "scorePercentReview": {
              "type": "number"
            },
            "starRating": {
              "type": "integer"
            },
            "starRatingReview": {
              "type": "integer"
            },
            "auditeeForename": {
              "type": "string"
            },
            "auditeeSurname": {
              "type": "string"
            },
            "auditorForename": {
              "type": "string"
            },
            "auditorSurname": {
              "type": "string"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetHazardSpottingGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "hazardSubcontractor": {
              "type": "string"
            },
            "hazardSubcontractorOther": {
              "type": "string"
            },
            "hazardSpottedAt": {
              "type": "string",
              "format": "date-time"
            },
            "hazardSpottedAtType": {
              "type": "string"
            },
            "hazardReportedBy": {
              "type": "string"
            },
            "hazardReportedDate": {
              "type": "string",
              "format": "date"
            },
            "hazardType": {
              "type": "string"
            },
            "hazardTypeOther": {
              "type": "string"
            },
            "hazardSubType": {
              "type": "string"
            },
            "hazardStillPresent": {
              "type": "boolean"
            },
            "hazardDetails": {
              "type": "string"
            },
            "hazardComments": {
              "type": "string"
            },
            "resolutionRequired": {
              "type": "boolean"
            },
            "resolutionSteps": {
              "type": "string"
            },
            "resolutionDone": {
              "type": "boolean"
            },
            "resolutionDate": {
              "type": "string",
              "format": "date"
            },
            "potentialCauseInjury": {
              "type": "boolean"
            },
            "potentialDamageEquip": {
              "type": "boolean"
            },
            "potentialDamageProp": {
              "type": "boolean"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetHSFileGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "supplierContractorRecordId": {
              "type": "string"
            },
            "supplierContractorReference": {
              "type": "string"
            },
            "supplierContractorName": {
              "type": "string"
            },
            "notificationOfProjectRecordId": {
              "type": "string"
            },
            "notificationOfProjectReference": {
              "type": "string"
            },
            "hsFileSigned": {
              "type": "string"
            },
            "hsFileDated": {
              "type": "string",
              "format": "date"
            },
            "hsFileDepartment1": {
              "type": "string"
            },
            "hsFileNoCopies1": {
              "type": "integer"
            },
            "hsFileIsIssued1": {
              "type": "boolean"
            },
            "hsFileDepartment2": {
              "type": "string"
            },
            "hsFileNoCopies2": {
              "type": "integer"
            },
            "hsFileIsIssued2": {
              "type": "boolean"
            },
            "hsFileDepartment3": {
              "type": "string"
            },
            "hsFileNoCopies3": {
              "type": "integer"
            },
            "hsFileIsIssued3": {
              "type": "boolean"
            },
            "hsFileDepartment4": {
              "type": "string"
            },
            "hsFileNoCopies4": {
              "type": "integer"
            },
            "hsFileIsIssued4": {
              "type": "boolean"
            },
            "hsFileDepartment5": {
              "type": "string"
            },
            "hsFileNoCopies5": {
              "type": "integer"
            },
            "hsFileIsIssued5": {
              "type": "boolean"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetPersonGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "projectReferences": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "isCurrent": {
              "type": "boolean"
            },
            "personType": {
              "type": "string"
            },
            "personTitle": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personJobTitle": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personManagerName": {
              "type": "string"
            },
            "personManagerPhone": {
              "type": "string"
            },
            "personAgeRange": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personNINumber": {
              "type": "string"
            },
            "personNationality": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personSex": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "personMobileNumber": {
              "type": "string"
            },
            "personEmail": {
              "type": "string"
            },
            "personNextOfKinName": {
              "type": "string"
            },
            "personNextOfKinRelationship": {
              "type": "string"
            },
            "personNextOfKinAddress1": {
              "type": "string"
            },
            "personNextOfKinAddress2": {
              "type": "string"
            },
            "personNextOfKinAddress3": {
              "type": "string"
            },
            "personNextOfKinTown": {
              "type": "string"
            },
            "personNextofKinCounty": {
              "type": "string"
            },
            "personNextOfKinPostCode": {
              "type": "string"
            },
            "personNextOfKinPhone": {
              "type": "string"
            },
            "personNextOfKinMobile": {
              "type": "string"
            },
            "personNextOfKinEmail": {
              "type": "string"
            },
            "personNotes": {
              "type": "string"
            },
            "personAdditional1": {
              "type": "string"
            },
            "personAdditional2": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetGeneralRiskGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "projectRiskRecordId": {
              "type": "string"
            },
            "projectRiskReference": {
              "type": "string"
            },
            "riskDescription": {
              "type": "string"
            },
            "riskConclusion": {
              "type": "string"
            },
            "riskAssessorName": {
              "type": "string"
            },
            "riskAssessmentDate": {
              "type": "string",
              "format": "date"
            },
            "riskPeopleExposed": {
              "type": "integer"
            },
            "riskTimeSpent": {
              "type": "number"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetTrainingGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "trainingRequiredBy": {
              "type": "string",
              "format": "date"
            },
            "trainingCompletedOn": {
              "type": "string",
              "format": "date"
            },
            "tnaRecordId": {
              "type": "string"
            },
            "tnaReference": {
              "type": "string"
            },
            "trainingStatus": {
              "type": "string"
            },
            "trainingComments": {
              "type": "string"
            },
            "trainingEmployeeRecordId": {
              "type": "string"
            },
            "trainingEmployeeReference": {
              "type": "string"
            },
            "trainingEmployeeForename": {
              "type": "string"
            },
            "trainingEmployeeSurname": {
              "type": "string"
            },
            "trainingEmployeeEmail": {
              "type": "string"
            },
            "trainingCourseRecordId": {
              "type": "string"
            },
            "trainingCourseReference": {
              "type": "string"
            },
            "trainingCourseName": {
              "type": "string"
            },
            "trainingCourseSubject": {
              "type": "string"
            },
            "trainingCourseDate": {
              "type": "string",
              "format": "date"
            },
            "trainingCourseCost": {
              "type": "number"
            },
            "trainingCouseProvider": {
              "type": "string"
            },
            "trainingCourseDuration": {
              "type": "string"
            },
            "trainingCourseHeldBy": {
              "type": "string"
            },
            "trainingCourseRenewDate": {
              "type": "string",
              "format": "date"
            },
            "trainingCourseTrainingType": {
              "type": "string"
            },
            "trainingCourseScheduleType": {
              "type": "string"
            },
            "trainingCourseScheduleInterval": {
              "type": "integer"
            },
            "trainingCourseLocation": {
              "type": "string"
            },
            "trainingDidNotAttend": {
              "type": "boolean"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetEquipmentGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "projectReferences": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "equipmentName": {
              "type": "string"
            },
            "equipmentModel": {
              "type": "string"
            },
            "equipmentDescription": {
              "type": "string"
            },
            "equipmentSerialNumber": {
              "type": "string"
            },
            "equipmentAssetNumber": {
              "type": "string"
            },
            "equipmentCEMark": {
              "type": "boolean"
            },
            "equipmentPurchasedDate": {
              "type": "string",
              "format": "date"
            },
            "equipmentValue": {
              "type": "number"
            },
            "equipmentInformationLog": {
              "type": "string"
            },
            "equipmentNotes": {
              "type": "string"
            },
            "equipmentType": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetOrgUnitGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "orgUnitCreatedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "orgUnitModifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitDetails": {
              "type": "string"
            },
            "orgUnitEnabled": {
              "type": "boolean"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "orgUnitParentId": {
              "type": "string"
            },
            "orgUnitParentName": {
              "type": "string"
            },
            "orgUnitParentExternalId": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetSafeUnsafeGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "observationDocumentReference": {
              "type": "string"
            },
            "observationTitle": {
              "type": "string"
            },
            "observationCategory": {
              "type": "string"
            },
            "observationType": {
              "type": "string"
            },
            "observationOccurredAt": {
              "type": "string",
              "format": "date-time"
            },
            "observationOccurredAtType": {
              "type": "string"
            },
            "observationPlaceDetails": {
              "type": "string"
            },
            "observationDescription": {
              "type": "string"
            },
            "observationImmediateAction": {
              "type": "string"
            },
            "observationRecommendation": {
              "type": "string"
            },
            "observationReportedBy": {
              "type": "string"
            },
            "observationConclusion": {
              "type": "string"
            },
            "observationClosedAt": {
              "type": "string",
              "format": "date"
            },
            "observationClosedBy": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetFireRiskGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "projectRiskRecordId": {
              "type": "string"
            },
            "projectRiskReference": {
              "type": "string"
            },
            "approvedForPortal": {
              "type": "boolean"
            },
            "fireRiskDescription": {
              "type": "string"
            },
            "fireRiskAssessorName": {
              "type": "string"
            },
            "fireRiskAssessmentDate": {
              "type": "string",
              "format": "date"
            },
            "fireRiskOfficer": {
              "type": "string"
            },
            "fireRiskResponsiblePerson": {
              "type": "string"
            },
            "fireRiskPublicRisk": {
              "type": "boolean"
            },
            "fireRiskSpecialConsiderations": {
              "type": "string"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetSupplierContractorGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "projectReferences": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "supplierCode": {
              "type": "string"
            },
            "supplierName": {
              "type": "string"
            },
            "supplierTelephone": {
              "type": "string"
            },
            "supplierEmail": {
              "type": "string"
            },
            "supplierFax": {
              "type": "string"
            },
            "supplierAddress1": {
              "type": "string"
            },
            "supplierAddress2": {
              "type": "string"
            },
            "supplierAddress3": {
              "type": "string"
            },
            "supplierTown": {
              "type": "string"
            },
            "supplierCounty": {
              "type": "string"
            },
            "supplierPostcode": {
              "type": "string"
            },
            "supplierContactName": {
              "type": "string"
            },
            "supplierContactTelephone": {
              "type": "string"
            },
            "supplierContactEmail": {
              "type": "string"
            },
            "supplierHSOfficerName": {
              "type": "string"
            },
            "supplierHSOfficerTelephone": {
              "type": "string"
            },
            "supplierHSOfficerEmail": {
              "type": "string"
            },
            "supplierLineManagerName": {
              "type": "string"
            },
            "supplierLineManagerTelephone": {
              "type": "string"
            },
            "supplierLineManagerEmail": {
              "type": "string"
            },
            "supplierSponsorName": {
              "type": "string"
            },
            "supplierSponsorTelephone": {
              "type": "string"
            },
            "supplierSponsorEmail": {
              "type": "string"
            },
            "supplierProductsSupplied": {
              "type": "string"
            },
            "supplierDetailsLastWork": {
              "type": "string"
            },
            "supplierLastOrderDate": {
              "type": "string",
              "format": "date"
            },
            "supplierUndertakenWork": {
              "type": "string"
            },
            "supplierApprovalDate": {
              "type": "string",
              "format": "date"
            },
            "supplierAdditionalInformation": {
              "type": "string"
            },
            "supplierComments": {
              "type": "string"
            },
            "supplierStarRating": {
              "type": "string"
            },
            "suppierInductionType": {
              "type": "string"
            },
            "SupplierStatus": {
              "type": "string"
            },
            "supplierAdditionalDate1": {
              "type": "string",
              "format": "date"
            },
            "supplierAdditionalDate2": {
              "type": "string",
              "format": "date"
            },
            "supplierAreasOfAvailability": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetIncidentAnalysisGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "incidentAnalysisYear": {
              "type": "integer"
            },
            "incidentAnalysisMonth": {
              "type": "string"
            },
            "incidentAnalysisDataInterval": {
              "type": "string"
            },
            "incidentAnalysisSpecifiedInterval": {
              "type": "boolean"
            },
            "incidentAnalysisFromDate": {
              "type": "string"
            },
            "incidentAnalysisToDate": {
              "type": "string"
            },
            "incidentAnalysisNumberEmployees": {
              "type": "number"
            },
            "incidentAnalysisManHours": {
              "type": "number"
            },
            "incidentAnalysisLifetimeHours": {
              "type": "number"
            },
            "incidentAnalysisManualInput": {
              "type": "boolean"
            },
            "incidentAnalysisLostTimeAccidents": {
              "type": "number"
            },
            "incidentAnalysisReportableAccidents": {
              "type": "number"
            },
            "incidentAnalysisTotalAccidents": {
              "type": "number"
            },
            "incidentAnalysisInjuryFrequencyRate": {
              "type": "number"
            },
            "incidentAnalysisIncidenceRate": {
              "type": "number"
            },
            "incidentAnalysisIncidentRate": {
              "type": "number"
            },
            "incidentAnalysisCascadeResults": {
              "type": "boolean"
            },
            "incidentAnalysisIsAutomated": {
              "type": "boolean"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetActionGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "actionOrgUnitName": {
              "type": "string"
            },
            "actionOrgUnitId": {
              "type": "string"
            },
            "actionOrgUnitExternalId": {
              "type": "string"
            },
            "answerId": {
              "type": "string"
            },
            "actionModule": {
              "type": "string"
            },
            "actionModuleReference": {
              "type": "string"
            },
            "actionModuleEndpoint": {
              "type": "string"
            },
            "actionSubmodule": {
              "type": "string"
            },
            "actionSubmoduleEndpoint": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateType": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "actionType": {
              "type": "string"
            },
            "actionHeader": {
              "type": "string"
            },
            "actionDetail": {
              "type": "string"
            },
            "actionDueDate": {
              "type": "string",
              "format": "date"
            },
            "actionOriginalDueDate": {
              "type": "string",
              "format": "date"
            },
            "actionIsArchive": {
              "type": "boolean"
            },
            "actionIsApproved": {
              "type": "boolean"
            },
            "actionIsComplete": {
              "type": "boolean"
            },
            "actionCompletePercent": {
              "type": "integer"
            },
            "actionCreatedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "actionModifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "actionCompletedAt": {
              "type": "string",
              "format": "date-time"
            },
            "actionApprovedAt": {
              "type": "string",
              "format": "date-time"
            },
            "actionRaisedByUser": {
              "type": "string"
            },
            "actionRaisedForUser": {
              "type": "string"
            },
            "actionCompletedByUser": {
              "type": "string"
            },
            "actionApprovedByUser": {
              "type": "string"
            },
            "actionModifiedByUser": {
              "type": "string"
            },
            "actionLastComment": {
              "type": "string"
            },
            "actionLastCommentUsername": {
              "type": "string"
            },
            "actionPriority": {
              "type": "string"
            },
            "actionCategory": {
              "type": "string"
            },
            "actionSubcategory": {
              "type": "string"
            },
            "actionCurrentStatus": {
              "type": "string"
            },
            "actionTimeTaken": {
              "type": "integer"
            },
            "actionSource": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetAspectImpactGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "aspectImpactComponentRecordIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "aspectImpactComponentReferences": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "aspectImpactDescription": {
              "type": "string"
            },
            "personRecordId": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "aspectImpactEvaluationDate": {
              "type": "string",
              "format": "date"
            },
            "aspectImpactDefinitions": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetAspectImpactComponentGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "aspectImpactComponentGeneralAspect": {
              "type": "string"
            },
            "aspectImpactComponentSpecificAspect": {
              "type": "string"
            },
            "aspectImpactComponentImpact": {
              "type": "string"
            },
            "aspectImpactComponentRatingControlled": {
              "type": "string"
            },
            "aspectImpactComponentRatingUncontrolled": {
              "type": "string"
            },
            "aspectImpactComponentControls": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetAspectImpactReportingGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "aspectImpactComponentRecordId": {
              "type": "string"
            },
            "aspectImpactComponentReference": {
              "type": "string"
            },
            "aspectImpactComponentGeneralAspect": {
              "type": "string"
            },
            "aspectImpactComponentSpecificAspect": {
              "type": "string"
            },
            "aspectImpactComponentImpact": {
              "type": "string"
            },
            "aspectImpactComponentRatingControlled": {
              "type": "string"
            },
            "aspectImpactComponentRatingUncontrolled": {
              "type": "string"
            },
            "aspectImpactComponentControls": {
              "type": "string"
            },
            "aspectImpactReportingDate": {
              "type": "string",
              "format": "date"
            },
            "aspectImpactReportingAmount": {
              "type": "number"
            },
            "aspectImpactReportingUnit": {
              "type": "string"
            },
            "aspectImpactReportingFinalTreatment": {
              "type": "string"
            },
            "aspectImpactReportingFinalDestination": {
              "type": "string"
            },
            "aspectImpactReportingCost": {
              "type": "number"
            },
            "aspectImpactReportingIncome": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetApprovalGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "approvalOrgUnitName": {
              "type": "string"
            },
            "approvalOrgUnitId": {
              "type": "string"
            },
            "approvalOrgUnitExternalId": {
              "type": "string"
            },
            "approvalModule": {
              "type": "string"
            },
            "approvalModuleReference": {
              "type": "string"
            },
            "approvalModuleEndpoint": {
              "type": "string"
            },
            "approvalStage": {
              "type": "string"
            },
            "approvalIsApproved": {
              "type": "boolean"
            },
            "approvalCreatedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "approvalModifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "approvalStatusChangedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "approvalCurrentTask": {
              "type": "boolean"
            },
            "approvalCreatedByUser": {
              "type": "string"
            },
            "approvalApprovedByUser": {
              "type": "string"
            },
            "approvalModifiedByUser": {
              "type": "string"
            },
            "approvalAssignedToUser": {
              "type": "string"
            },
            "approvalDesignatedApprover": {
              "type": "string"
            },
            "approvalComment": {
              "type": "string"
            },
            "approvalDueDate": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "exportDatasetProjectRiskGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "approvedForPortal": {
              "type": "boolean"
            },
            "projectRiskDescription": {
              "type": "string"
            },
            "projectRiskAssessorName": {
              "type": "string"
            },
            "projectRiskAssessmentDate": {
              "type": "string",
              "format": "date"
            },
            "projectRiskAssessmentDetails": {
              "type": "string"
            },
            "projectRiskPeopleExposed": {
              "type": "integer"
            },
            "projectRiskConclusion": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetDrivingGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "drivingLicenceIssueNumber": {
              "type": "string"
            },
            "drivingLicenceValidFrom": {
              "type": "string",
              "format": "date"
            },
            "drivingLicenceValidTo": {
              "type": "string",
              "format": "date"
            },
            "drivingLicenceType": {
              "type": "string"
            },
            "drivingLicenceRequiredToDrive": {
              "type": "boolean"
            },
            "drivingLicenceHasHGV": {
              "type": "boolean"
            },
            "drivingLicenceHGVType": {
              "type": "string"
            },
            "drivingLicenceHGVExpiryDate": {
              "type": "string",
              "format": "date"
            },
            "drivingLicenceCategory": {
              "type": "string"
            },
            "drivingLicenceGroup": {
              "type": "string"
            },
            "drivingLicenceConvictions": {
              "type": "string"
            },
            "drivingLicenceComments": {
              "type": "string"
            },
            "personRecordId": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personSex": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetActivityRiskGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "projectRiskRecordId": {
              "type": "string"
            },
            "projectRiskReference": {
              "type": "string"
            },
            "approvedForPortal": {
              "type": "boolean"
            },
            "activityRiskCategory": {
              "type": "string"
            },
            "activityRiskDescription": {
              "type": "string"
            },
            "personRecordId": {
              "type": "string"
            },
            "activityRiskAssessorReference": {
              "type": "string"
            },
            "activityRiskAssessmentForename": {
              "type": "string"
            },
            "activityRiskAssessmentSurname": {
              "type": "string"
            },
            "activityRiskAssessmentTeam": {
              "type": "string"
            },
            "activityRiskAssessmentDate": {
              "type": "string",
              "format": "date"
            },
            "activityRiskActivityDescription": {
              "type": "string"
            },
            "activityRiskNumberExposed": {
              "type": "integer"
            },
            "activityRiskPeopleExposed": {
              "type": "string"
            },
            "activityRiskOverallPotentialRisk": {
              "type": "integer"
            },
            "activityRiskOverallResidualRisk": {
              "type": "integer"
            },
            "activityRiskCostControlMeasures": {
              "type": "number"
            },
            "activityRiskIsAcceptable": {
              "type": "boolean"
            },
            "activityRiskConclusion": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetActHazConGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "recordReference": {
              "type": "string"
            },
            "recordModuleKey": {
              "type": "string"
            },
            "recordModuleCaption": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "hazardControlCategory": {
              "type": "string"
            },
            "hazardControlPhrases": {
              "type": "string"
            },
            "hazardControlWhoAtRisk": {
              "type": "string"
            },
            "hazardControlHowAtRisk": {
              "type": "string"
            },
            "hazardControlMeasures": {
              "type": "string"
            },
            "hazardControlAdditionalMeasures": {
              "type": "string"
            },
            "hazardControlOrderIndex": {
              "type": "integer"
            },
            "hazardControlPotentialFactorCaption": {
              "type": "string"
            },
            "hazardControlResidualFactorCaption": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetProjectGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectDescription": {
              "type": "string"
            },
            "projectManager": {
              "type": "string"
            },
            "projectStartDate": {
              "type": "string",
              "format": "date"
            },
            "projectEndDate": {
              "type": "string",
              "format": "date"
            },
            "projectEstimatedManHours": {
              "type": "integer"
            },
            "projectDuration": {
              "type": "integer"
            },
            "projectUPRN": {
              "type": "string"
            },
            "projectPropertyIdentifier": {
              "type": "string"
            },
            "projectAddress": {
              "type": "string"
            },
            "projectPostcode": {
              "type": "string"
            },
            "projectOwnership": {
              "type": "string"
            },
            "projectTenure": {
              "type": "string"
            },
            "projectNoOfFloors": {
              "type": "integer"
            },
            "projectFloorArea": {
              "type": "number"
            },
            "projectOccupancyCapacity": {
              "type": "integer"
            },
            "projectBuildingType": {
              "type": "string"
            },
            "projectField1Text50": {
              "type": "string"
            },
            "projectField2Text50": {
              "type": "string"
            },
            "projectField3Text50": {
              "type": "string"
            },
            "projectField4TextMax": {
              "type": "string"
            },
            "projectField5TextMax": {
              "type": "string"
            },
            "projectField6TextMax": {
              "type": "string"
            },
            "projectField7Date": {
              "type": "string",
              "format": "date"
            },
            "projectField8Date": {
              "type": "string",
              "format": "date"
            },
            "projectField9Date": {
              "type": "string",
              "format": "date"
            },
            "projectField10Integer": {
              "type": "integer"
            },
            "projectField11Integer": {
              "type": "integer"
            },
            "projectField12Integer": {
              "type": "integer"
            },
            "projectField13Decimal": {
              "type": "number"
            },
            "projectField14Decimal": {
              "type": "number"
            },
            "projectField15Decimal": {
              "type": "number"
            },
            "projectField16Dictionary": {
              "type": "string"
            },
            "projectField17Dictionary": {
              "type": "string"
            },
            "projectField18Dictionary": {
              "type": "string"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetAirEmissionsGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "airEmissionsDescription": {
              "type": "string"
            },
            "airEmissionsSampleDate": {
              "type": "string",
              "format": "date"
            },
            "airEmissionsComments": {
              "type": "string"
            },
            "airEmissionsTestPassed": {
              "type": "boolean"
            },
            "environmentalRecordId": {
              "type": "string"
            },
            "environmentalReference": {
              "type": "string"
            },
            "personRecordId": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "equipmentRecordId": {
              "type": "string"
            },
            "equipmentReference": {
              "type": "string"
            },
            "equipmentName": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetLandContaminationGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "landContaminationDescription": {
              "type": "string"
            },
            "landContaminationSampleDate": {
              "type": "string",
              "format": "date"
            },
            "landContaminationComments": {
              "type": "string"
            },
            "landContaminationTestPassed": {
              "type": "boolean"
            },
            "environmentalRecordId": {
              "type": "string"
            },
            "environmentalReference": {
              "type": "string"
            },
            "personRecordId": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "equipmentRecordId": {
              "type": "string"
            },
            "equipmentReference": {
              "type": "string"
            },
            "equipmentName": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetReleaseToWaterGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "releaseToWaterDescription": {
              "type": "string"
            },
            "releaseToWaterSampleDate": {
              "type": "string",
              "format": "date"
            },
            "releaseToWaterComments": {
              "type": "string"
            },
            "releaseToWaterTestPassed": {
              "type": "boolean"
            },
            "environmentalRecordId": {
              "type": "string"
            },
            "environmentalReference": {
              "type": "string"
            },
            "personRecordId": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "equipmentRecordId": {
              "type": "string"
            },
            "equipmentReference": {
              "type": "string"
            },
            "equipmentName": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetSurveySampleGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "recordReference": {
              "type": "string"
            },
            "recordModuleKey": {
              "type": "string"
            },
            "recordModuleCaption": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "surveySampleType": {
              "type": "string"
            },
            "surveySampleMeasureUnit": {
              "type": "string"
            },
            "surveySampleQuantity": {
              "type": "number"
            },
            "surveySampleLocation": {
              "type": "string"
            },
            "surveySampleReference": {
              "type": "string"
            },
            "surveySampleResult": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetThirdPartyGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "recordReference": {
              "type": "string"
            },
            "recordModuleKey": {
              "type": "string"
            },
            "recordModuleCaption": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "thirdPartyName": {
              "type": "string"
            },
            "thirdPartyAddress": {
              "type": "string"
            },
            "thirdPartyTelephone": {
              "type": "string"
            },
            "thirdPartyInsurers": {
              "type": "string"
            },
            "thirdPartyPolicyNumber": {
              "type": "string"
            },
            "thirdPartyIsDamageVehicle": {
              "type": "boolean"
            },
            "thirdPartyCarMake": {
              "type": "string"
            },
            "thirdPartyCarModel": {
              "type": "string"
            },
            "thirdPartyCarColour": {
              "type": "string"
            },
            "thirdPartyCarRegistrationNumber": {
              "type": "string"
            },
            "thirdPartyIsSeatBeltsFitted": {
              "type": "boolean"
            },
            "thirdPartyIsSeatBeltsInUse": {
              "type": "boolean"
            },
            "thirdPartyVehicleDamageDetails": {
              "type": "string"
            },
            "thirdPartyDriver": {
              "type": "boolean"
            },
            "thirdPartyDriverName": {
              "type": "string"
            },
            "thirdPartyDriverAddress": {
              "type": "string"
            },
            "thirdPartyDriverTelephone": {
              "type": "string"
            },
            "thirdPartyOwner": {
              "type": "boolean"
            },
            "thirdPartyOwnerName": {
              "type": "string"
            },
            "thirdPartyOwnerAddress": {
              "type": "string"
            },
            "thirdPartyOwnerTelephone": {
              "type": "string"
            },
            "thirdPartyInjuryDetails": {
              "type": "string"
            },
            "thirdPartyTakenToHospital": {
              "type": "string"
            },
            "thirdPartyDetained": {
              "type": "string"
            },
            "thirdPartyIsDamageProperty": {
              "type": "boolean"
            },
            "thirdPartyPropertyDamageDetails": {
              "type": "string"
            },
            "thirdPartyAdditionalInformation": {
              "type": "string"
            },
            "thirdPartyCategory": {
              "type": "string"
            },
            "thirdPartyPersonCategory": {
              "type": "string"
            },
            "thirdPartyOrderIndex": {
              "type": "integer"
            },
            "thirdPartyIsInjuryOccurred": {
              "type": "boolean"
            }
          }
        }
      },
      "exportDatasetEnvironmentalGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "environmentalDescription": {
              "type": "string"
            },
            "environmentalAssessmentDate": {
              "type": "string",
              "format": "date"
            },
            "environmentalComments": {
              "type": "string"
            },
            "environmentalFactorCaption": {
              "type": "string"
            },
            "environmentalFactorValue": {
              "type": "integer"
            },
            "environmentalFactorCount": {
              "type": "integer"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetWasteDetailGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "recordReference": {
              "type": "string"
            },
            "recordModuleKey": {
              "type": "string"
            },
            "recordModuleCaption": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "wasteDetailType": {
              "type": "string"
            },
            "wasteDetailEWCCode": {
              "type": "string"
            },
            "wasteDetailDescription": {
              "type": "string"
            },
            "wasteDetailContainer": {
              "type": "string"
            },
            "wasteDetailQuantity": {
              "type": "number"
            },
            "wasteDetailQuantityUnit": {
              "type": "string"
            },
            "wasteDetailQuantityDescription": {
              "type": "string"
            },
            "wasteDetailQuantity2": {
              "type": "number"
            },
            "wasteDetailQuantityUnit2": {
              "type": "string"
            },
            "wasteDetailOrderIndex": {
              "type": "integer"
            }
          }
        }
      },
      "exportDatasetWasteHandlerGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "wasteHandlerName": {
              "type": "string"
            },
            "wasteHandlerAddress1": {
              "type": "string"
            },
            "wasteHandlerAddress2": {
              "type": "string"
            },
            "wasteHandlerAddress3": {
              "type": "string"
            },
            "wasteHandlerTown": {
              "type": "string"
            },
            "wasteHandlerCounty": {
              "type": "string"
            },
            "wasteHandlerPostcode": {
              "type": "string"
            },
            "wasteHandlerTelephoneNumber": {
              "type": "string"
            },
            "wasteHandlerFaxNumber": {
              "type": "string"
            },
            "wasteHandlerEmail": {
              "type": "string"
            },
            "wasteHandlerCertificateNumber": {
              "type": "string"
            },
            "wasteHandlerRenewDate": {
              "type": "string",
              "format": "date"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetWasteMaterialGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "wasteMaterialDescription": {
              "type": "string"
            },
            "wasteMaterialContainer": {
              "type": "string"
            },
            "wasteMaterialQuantity": {
              "type": "string"
            },
            "wasteMaterialUsedBy": {
              "type": "string"
            },
            "wasteMaterialUsedFor": {
              "type": "string"
            },
            "wasteMaterialProcess": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetWasteTransferGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "environmentalRecordId": {
              "type": "string"
            },
            "environmentalReference": {
              "type": "string"
            },
            "wasteTransferBrokerName": {
              "type": "string"
            },
            "wasteTransferBrokerAddress1": {
              "type": "string"
            },
            "wasteTransferBrokerAddress2": {
              "type": "string"
            },
            "wasteTransferBrokerAddress3": {
              "type": "string"
            },
            "wasteTransferBrokerTown": {
              "type": "string"
            },
            "wasteTransferBrokerCounty": {
              "type": "string"
            },
            "wasteTransferBrokerPostcode": {
              "type": "string"
            },
            "wasteHandlerHolderRecordId": {
              "type": "string"
            },
            "wasteHandlerHolderReference": {
              "type": "string"
            },
            "wasteHandlerHolderName": {
              "type": "string"
            },
            "wasteHandlerHolderAddress1": {
              "type": "string"
            },
            "wasteHandlerHolderAddress2": {
              "type": "string"
            },
            "wasteHandlerHolderAddress3": {
              "type": "string"
            },
            "wasteHandlerHolderTown": {
              "type": "string"
            },
            "wasteHandlerHolderCounty": {
              "type": "string"
            },
            "wasteHandlerHolderPostcode": {
              "type": "string"
            },
            "wasteTransferHolderProducedWaste": {
              "type": "boolean"
            },
            "wasteTransferHolderImportedWaste": {
              "type": "boolean"
            },
            "wasteTransferHolderIsCollectionAuthority": {
              "type": "boolean"
            },
            "wasteTransferHolderIsDisposalAuthority": {
              "type": "boolean"
            },
            "wasteTransferHolderHasDisposalLicence": {
              "type": "boolean"
            },
            "wasteTransferHolderDisposalLicenceNo": {
              "type": "string"
            },
            "wasteTransferHolderDisposalLicenceIssueBy": {
              "type": "string"
            },
            "wasteTransferHolderDisposalLicenceExempt": {
              "type": "boolean"
            },
            "wasteTransferHolderDisposalExemptReason": {
              "type": "string"
            },
            "wasteTransferHolderIsRegisteredCarrier": {
              "type": "boolean"
            },
            "wasteTransferHolderCarrierLicenceNo": {
              "type": "string"
            },
            "wasteTransferHolderCarrierLicenceIssueBy": {
              "type": "string"
            },
            "wasteTransferHolderRegisteredCarrierExempt": {
              "type": "boolean"
            },
            "wasteTransferHolderCarrierExemptReason": {
              "type": "string"
            },
            "wasteHandlerCollectorRecordId": {
              "type": "string"
            },
            "wasteHandlerCollectorReference": {
              "type": "string"
            },
            "wasteHandlerCollectorName": {
              "type": "string"
            },
            "wasteHandlerCollectorAddress1": {
              "type": "string"
            },
            "wasteHandlerCollectorAddress2": {
              "type": "string"
            },
            "wasteHandlerCollectorAddress3": {
              "type": "string"
            },
            "wasteHandlerCollectorTown": {
              "type": "string"
            },
            "wasteHandlerCollectorCounty": {
              "type": "string"
            },
            "wasteHandlerCollectorPostcode": {
              "type": "string"
            },
            "wasteTransferCollectorIsCollectionAuthority": {
              "type": "boolean"
            },
            "wasteTransferCollectorIsWasteExporter": {
              "type": "boolean"
            },
            "wasteTransferCollectorIsDisposalAuthority": {
              "type": "boolean"
            },
            "wasteTransferCollectorHasDisposalLicence": {
              "type": "boolean"
            },
            "wasteTransferCollectorDisposalLicenceNo": {
              "type": "string"
            },
            "wasteTransferCollectorDisposalLicenceIssueBy": {
              "type": "string"
            },
            "wasteTransferCollectorDisposalLicenceExempt": {
              "type": "boolean"
            },
            "wasteTransferCollectorDisposalExemptReason": {
              "type": "string"
            },
            "wasteTransferCollectorIsRegisteredCarrier": {
              "type": "boolean"
            },
            "wasteTransferCollectorCarrierLicenceNo": {
              "type": "string"
            },
            "wasteTransferCollectorCarrierLicenceIssueBy": {
              "type": "string"
            },
            "wasteTransferCollectorRegisteredCarrierExempt": {
              "type": "boolean"
            },
            "wasteTransferCollectorCarrierExemptReason": {
              "type": "string"
            },
            "wasteTransferDate": {
              "type": "string",
              "format": "date"
            },
            "wasteTransferCollectionAddress1": {
              "type": "string"
            },
            "wasteTransferCollectionAddress2": {
              "type": "string"
            },
            "wasteTransferCollectionAddress3": {
              "type": "string"
            },
            "wasteTransferCollectionTown": {
              "type": "string"
            },
            "wasteTransferCollectionCounty": {
              "type": "string"
            },
            "wasteTransferCollectionPostcode": {
              "type": "string"
            },
            "wasteTransferSignature1": {
              "type": "string"
            },
            "wasteTransferSignatureName1": {
              "type": "string"
            },
            "wasteTransferSignatureRepresenting1": {
              "type": "string"
            },
            "wasteTransferSignature2": {
              "type": "string"
            },
            "wasteTransferSignatureName2": {
              "type": "string"
            },
            "wasteTransferSignatureRepresenting2": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetBehaviouralGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "behaviouralDocumentReference": {
              "type": "string"
            },
            "behaviouralAuditDate": {
              "type": "string",
              "format": "date"
            },
            "behaviouralDescription": {
              "type": "string"
            },
            "behaviouralAuditorName": {
              "type": "string"
            },
            "behaviouralTimeSpent": {
              "type": "number"
            },
            "behaviouralNoOfPeopleObserved": {
              "type": "integer"
            },
            "behaviouralPeopleObserved": {
              "type": "string"
            },
            "behaviouralTotalSafeActs": {
              "type": "integer"
            },
            "behaviouralTotalUnsafeActs": {
              "type": "integer"
            },
            "behaviouralConclusion": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetInsuranceDetailsGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "recordReference": {
              "type": "string"
            },
            "recordModuleKey": {
              "type": "string"
            },
            "recordModuleCaption": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "insuranceDetailsCategory": {
              "type": "string"
            },
            "insuranceDetailsIsLiable": {
              "type": "boolean"
            },
            "insuranceDetailsExpiryDate": {
              "type": "string",
              "format": "date"
            },
            "insuranceDetailsIndemnityLimit": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetScopeOfServiceGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "recordReference": {
              "type": "string"
            },
            "recordModuleKey": {
              "type": "string"
            },
            "recordModuleCaption": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "scopeOfServiceCategory": {
              "type": "string"
            },
            "scopeOfServiceSubCategory": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetInjuryClassificationGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "recordId": {
              "type": "string"
            },
            "recordReference": {
              "type": "string"
            },
            "recordModuleKey": {
              "type": "string"
            },
            "recordModuleCaption": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "injuryClassificationType": {
              "type": "string"
            },
            "injuryClassificationApparentCause": {
              "type": "string"
            },
            "injuryClassificationPartsAffected": {
              "type": "string"
            }
          }
        }
      },
      "exportDatasetClaimGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "incidentEventRecordId": {
              "type": "string"
            },
            "incidentEventReference": {
              "type": "string"
            },
            "vehicleIncidentRecordId": {
              "type": "string"
            },
            "vehicleIncidentReference": {
              "type": "string"
            },
            "claimType": {
              "type": "string"
            },
            "claimInvestigationDate": {
              "type": "string",
              "format": "date"
            },
            "claimIncidentDate": {
              "type": "string",
              "format": "date"
            },
            "claimNotificationDate": {
              "type": "string",
              "format": "date"
            },
            "claimDescription": {
              "type": "string"
            },
            "claimIncidentNature": {
              "type": "string"
            },
            "claimIncidentDetails": {
              "type": "string"
            },
            "claimManager": {
              "type": "string"
            },
            "claimProbability": {
              "type": "string"
            },
            "claimStage": {
              "type": "string"
            },
            "claimPosition": {
              "type": "string"
            },
            "claimOutcome": {
              "type": "string"
            },
            "claimCostCentre": {
              "type": "string"
            },
            "claimInterimDate": {
              "type": "string",
              "format": "date"
            },
            "claimSettlementDate": {
              "type": "string",
              "format": "date"
            },
            "claimInitialReserveEstimate": {
              "type": "number"
            },
            "claimCurrentReserveEstimate": {
              "type": "number"
            },
            "claimInterimPayment": {
              "type": "number"
            },
            "claimPlaintiffCostsEstimate": {
              "type": "number"
            },
            "claimPlaintiffCostsActual": {
              "type": "number"
            },
            "claimDefenceCostsEstimate": {
              "type": "number"
            },
            "claimDefenceCostsActual": {
              "type": "number"
            },
            "claimVatEstimate": {
              "type": "number"
            },
            "claimVatActual": {
              "type": "number"
            },
            "claimExcessEstimate": {
              "type": "number"
            },
            "claimExcessActual": {
              "type": "number"
            },
            "claimTotalEstimate": {
              "type": "number"
            },
            "claimTotalActual": {
              "type": "number"
            },
            "claimSettlementNotes": {
              "type": "string"
            },
            "claimInsurerReference": {
              "type": "string"
            },
            "claimInsurerDetails": {
              "type": "string"
            },
            "claimBrokerReference": {
              "type": "string"
            },
            "claimBrokerDetails": {
              "type": "string"
            },
            "claimDefenceSolicitor": {
              "type": "string"
            },
            "claimLossAdjuster": {
              "type": "string"
            },
            "claimOtherParties": {
              "type": "string"
            },
            "claimClaimantSurname": {
              "type": "string"
            },
            "claimClaimantForename": {
              "type": "string"
            },
            "claimClaimantAddress1": {
              "type": "string"
            },
            "claimClaimantAddress2": {
              "type": "string"
            },
            "claimClaimantAddress3": {
              "type": "string"
            },
            "claimClaimantTown": {
              "type": "string"
            },
            "claimClaimantCounty": {
              "type": "string"
            },
            "claimClaimantPostCode": {
              "type": "string"
            },
            "claimClaimantBirthDate": {
              "type": "string",
              "format": "date"
            },
            "claimClaimantDeathDate": {
              "type": "string",
              "format": "date"
            },
            "claimClaimantAge": {
              "type": "integer"
            },
            "claimClaimantSex": {
              "type": "string"
            },
            "claimClaimantOccupation": {
              "type": "string"
            },
            "claimClaimantShift": {
              "type": "string"
            },
            "claimClaimantLostDays": {
              "type": "integer"
            },
            "claimClaimantInjuryType": {
              "type": "string"
            },
            "claimClaimantApparentCause": {
              "type": "string"
            },
            "claimClaimantBodyPart": {
              "type": "string"
            },
            "claimClaimantResultantHarm": {
              "type": "string"
            },
            "claimPlaintiffName": {
              "type": "string"
            },
            "claimPlaintiffSolicitor": {
              "type": "string"
            },
            "claimDefenceNature": {
              "type": "string"
            },
            "claimExpertWitness": {
              "type": "string"
            },
            "claimIsExpertInternal": {
              "type": "boolean"
            },
            "claimIsExpertExternal": {
              "type": "boolean"
            },
            "claimExpertExchangeWitnessReports": {
              "type": "boolean"
            },
            "claimExpertAdviceNotes": {
              "type": "string"
            },
            "claimIsQuantumInternal": {
              "type": "boolean"
            },
            "claimIsQuantumExternal": {
              "type": "boolean"
            },
            "claimQuantumExchangeWitnessReports": {
              "type": "boolean"
            },
            "claimQuantumAdviceNotes": {
              "type": "string"
            },
            "claimHasComplain": {
              "type": "boolean"
            },
            "claimNoOfPeopleInjured": {
              "type": "number"
            },
            "claimHasAlternativeDisputeResolution": {
              "type": "boolean"
            },
            "claimAlternativeResolution": {
              "type": "string"
            },
            "claimIsStructuringFeasible": {
              "type": "boolean"
            },
            "claimIsAcceptableToPlaintiff": {
              "type": "boolean"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetConstructionPhaseGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "constructionPhaseFileSigned": {
              "type": "string"
            },
            "constructionPhaseFileDated": {
              "type": "string",
              "format": "date"
            },
            "notificationOfProjectRecordId": {
              "type": "string"
            },
            "notificationOfProjectReference": {
              "type": "string"
            },
            "supplierContractorRecordId": {
              "type": "string"
            },
            "supplierContractorReference": {
              "type": "string"
            },
            "supplierContractorName": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetNotificationOfProjectGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "projectRecordId": {
              "type": "string"
            },
            "projectReference": {
              "type": "string"
            },
            "notificationOfProjectOption": {
              "type": "string"
            },
            "notificationOfProjectForwardingDate": {
              "type": "string",
              "format": "date"
            },
            "notificationOfProjectConstructionSiteAddress": {
              "type": "string"
            },
            "notificationOfProjectLocalAuthorityName": {
              "type": "string"
            },
            "notificationOfProjectProjectDescription": {
              "type": "string"
            },
            "notificationOfProjectClientName": {
              "type": "string"
            },
            "notificationOfProjectClientEmail": {
              "type": "string"
            },
            "notificationOfProjectClientAddress": {
              "type": "string"
            },
            "notificationOfProjectClientPostcode": {
              "type": "string"
            },
            "notificationOfProjectClientTelephone": {
              "type": "string"
            },
            "notificationOfProjectAdditionalClientDetails": {
              "type": "string"
            },
            "notificationOfProjectDesignerName": {
              "type": "string"
            },
            "notificationOfProjectDesignerEmail": {
              "type": "string"
            },
            "notificationOfProjectDesignerAddress": {
              "type": "string"
            },
            "notificationOfProjectDesignerPostcode": {
              "type": "string"
            },
            "notificationOfProjectDesignerTelephone": {
              "type": "string"
            },
            "notificationOfProjectAdditionalDesignerDetails": {
              "type": "string"
            },
            "notificationOfProjectCoordinatorName": {
              "type": "string"
            },
            "notificationOfProjectCoordinatorEmail": {
              "type": "string"
            },
            "notificationOfProjectCoordinatorAddress": {
              "type": "string"
            },
            "notificationOfProjectCoordinatorPostcode": {
              "type": "string"
            },
            "notificationOfProjectCoordinatorTelephone": {
              "type": "string"
            },
            "supplierContractorPrincipalRecordId": {
              "type": "string"
            },
            "supplierContractorPrincipalReference": {
              "type": "string"
            },
            "supplierContractorPrincipalName": {
              "type": "string"
            },
            "supplierContractorPrincipalAddress1": {
              "type": "string"
            },
            "supplierContractorPrincipalAddress2": {
              "type": "string"
            },
            "supplierContractorPrincipalAddress3": {
              "type": "string"
            },
            "supplierContractorPrincipalTown": {
              "type": "string"
            },
            "supplierContractorPrincipalCounty": {
              "type": "string"
            },
            "supplierContractorPrincipalPostcode": {
              "type": "string"
            },
            "supplierContractorPrincipalTelephone": {
              "type": "string"
            },
            "supplierContractorPrincipalEmail": {
              "type": "string"
            },
            "supplierContractorPrincipalStatus": {
              "type": "string"
            },
            "supplierContractorPrincipalStatusRating": {
              "type": "string"
            },
            "notificationOfProjectTimeAllowed": {
              "type": "string"
            },
            "notificationOfProjectTimescale": {
              "type": "string"
            },
            "notificationOfProjectPlannedStartDate": {
              "type": "string",
              "format": "date"
            },
            "notificationOfProjectPlannedDuration": {
              "type": "string"
            },
            "notificationOfProjectNumberPeople": {
              "type": "integer"
            },
            "notificationOfProjectNumberContractors": {
              "type": "integer"
            },
            "supplierContractorAppointedRecordId": {
              "type": "string"
            },
            "supplierContractorAppointedReference": {
              "type": "string"
            },
            "supplierContractorAppointedName": {
              "type": "string"
            },
            "supplierContractorAppointedAddress1": {
              "type": "string"
            },
            "supplierContractorAppointedAddress2": {
              "type": "string"
            },
            "supplierContractorAppointedAddress3": {
              "type": "string"
            },
            "supplierContractorAppointedTown": {
              "type": "string"
            },
            "supplierContractorAppointedCounty": {
              "type": "string"
            },
            "supplierContractorAppointedPostcode": {
              "type": "string"
            },
            "supplierContractorAppointedTelephone": {
              "type": "string"
            },
            "supplierContractorAppointedEmail": {
              "type": "string"
            },
            "supplierContractorAppointedStatus": {
              "type": "string"
            },
            "supplierContractorAppointedStatusRating": {
              "type": "string"
            },
            "notificationOfProjectAppointedContractorDetails": {
              "type": "string"
            },
            "notificationOfProjectDeclarationName": {
              "type": "string"
            },
            "notificationOfProjectDeclarationDate": {
              "type": "string",
              "format": "date"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetElectricalTestingGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "equipmentRecordId": {
              "type": "string"
            },
            "equipmentReference": {
              "type": "string"
            },
            "equipmentName": {
              "type": "string"
            },
            "equipmentSerialNumber": {
              "type": "string"
            },
            "equipmentAssetNumber": {
              "type": "string"
            },
            "equipmentModel": {
              "type": "string"
            },
            "equipmentType": {
              "type": "string"
            },
            "electricalTestingDateOfTest": {
              "type": "string",
              "format": "date"
            },
            "electricalTestingTestProcedure": {
              "type": "string"
            },
            "electricalTestingInspectedBy": {
              "type": "string"
            },
            "electricalTestingCompanyAddress": {
              "type": "string"
            },
            "electricalTestingContactName": {
              "type": "string"
            },
            "electricalTestingTelephoneNo": {
              "type": "string"
            },
            "electricalTestingFaxNo": {
              "type": "string"
            },
            "electricalTestingWorkDone": {
              "type": "string"
            },
            "electricalTestingRemedialBy": {
              "type": "string"
            },
            "electricalTestingRemedialDate": {
              "type": "string",
              "format": "date"
            },
            "electricalTestingTargetCompDate": {
              "type": "string",
              "format": "date"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetLiftingEquipGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "equipmentRecordId": {
              "type": "string"
            },
            "equipmentReference": {
              "type": "string"
            },
            "equipmentName": {
              "type": "string"
            },
            "equipmentSerialNumber": {
              "type": "string"
            },
            "equipmentAssetNumber": {
              "type": "string"
            },
            "equipmentModel": {
              "type": "string"
            },
            "equipmentType": {
              "type": "string"
            },
            "liftingEquipOwnerDetails": {
              "type": "string"
            },
            "liftingEquipSafeWorkingInfo": {
              "type": "string"
            },
            "liftingEquipTestDate": {
              "type": "string",
              "format": "date"
            },
            "liftingEquipRecordIssueDate": {
              "type": "string",
              "format": "date"
            },
            "liftingEquipLastTestDate": {
              "type": "string",
              "format": "date"
            },
            "liftingEquipCertificateNumber": {
              "type": "string"
            },
            "liftingEquipRecordIssuedNumber": {
              "type": "string"
            },
            "liftingEquipRecordNumber": {
              "type": "string"
            },
            "liftingEquipDefects": {
              "type": "string"
            },
            "liftingEquipObservations": {
              "type": "string"
            },
            "liftingEquipAuthenticatorDetails": {
              "type": "string"
            },
            "liftingEquipExaminedBy": {
              "type": "string"
            },
            "liftingEquipExaminersComments": {
              "type": "string"
            },
            "liftingEquipDeclarationDate": {
              "type": "string",
              "format": "date"
            },
            "liftingEquipRectifyByDate": {
              "type": "string",
              "format": "date"
            },
            "liftingEquipNextExamDate": {
              "type": "string",
              "format": "date"
            },
            "liftingEquipRecordDate": {
              "type": "string",
              "format": "date"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetEquipIssueGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "equipmentRecordId": {
              "type": "string"
            },
            "equipmentReference": {
              "type": "string"
            },
            "equipmentName": {
              "type": "string"
            },
            "equipmentSerialNumber": {
              "type": "string"
            },
            "equipmentAssetNumber": {
              "type": "string"
            },
            "equipmentModel": {
              "type": "string"
            },
            "equipmentType": {
              "type": "string"
            },
            "personRecordId": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "equipIssueIssuedBy": {
              "type": "string"
            },
            "equipIssueDateIssued": {
              "type": "string",
              "format": "date"
            },
            "equipIssueReturnable": {
              "type": "boolean"
            },
            "equipIssueDueBack": {
              "type": "string",
              "format": "date"
            },
            "equipIssueDateReturned": {
              "type": "string",
              "format": "date"
            },
            "equipIssueComments": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetInvestigationGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "incidentEventRecordIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "incidentEventReferences": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "vehicleIncidentRecordIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "vehicleIncidentReferences": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "investigationSeverity": {
              "type": "string"
            },
            "investigationIncidentOccurredAt": {
              "type": "string",
              "format": "date-time"
            },
            "investigationIncidentOccurredAtType": {
              "type": "string"
            },
            "investigationIncidentDescription": {
              "type": "string"
            },
            "investigationIncidentDetails": {
              "type": "string"
            },
            "investigationBy": {
              "type": "string"
            },
            "investigationDate": {
              "type": "string",
              "format": "date"
            },
            "investigationActualCause": {
              "type": "string"
            },
            "investigationProcedures": {
              "type": "string"
            },
            "investigationContributions": {
              "type": "string"
            },
            "investigationUnderlyingCause": {
              "type": "string"
            },
            "investigationPreventativeMeasures": {
              "type": "string"
            },
            "investigationConclusion": {
              "type": "string"
            },
            "investigationRiskAssessmentCarriedOut": {
              "type": "boolean"
            },
            "activityRiskRecordId": {
              "type": "string"
            },
            "activityRiskReference": {
              "type": "string"
            },
            "investigationTrainingProvided": {
              "type": "boolean"
            },
            "courseRecordId": {
              "type": "string"
            },
            "courseReference": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetPpeGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "equipmentRecordId": {
              "type": "string"
            },
            "equipmentReference": {
              "type": "string"
            },
            "equipmentName": {
              "type": "string"
            },
            "equipmentSerialNumber": {
              "type": "string"
            },
            "equipmentAssetNumber": {
              "type": "string"
            },
            "equipmentModel": {
              "type": "string"
            },
            "equipmentType": {
              "type": "string"
            },
            "ppeMaintenanceProcedure": {
              "type": "string"
            },
            "supplierContractorRecordId": {
              "type": "string"
            },
            "supplierContractorReference": {
              "type": "string"
            },
            "supplierContractorName": {
              "type": "string"
            },
            "supplierContractorAddress1": {
              "type": "string"
            },
            "supplierContractorAddress2": {
              "type": "string"
            },
            "supplierContractorAddress3": {
              "type": "string"
            },
            "supplierContractorTown": {
              "type": "string"
            },
            "supplierContractorCounty": {
              "type": "string"
            },
            "supplierContractorPostcode": {
              "type": "string"
            },
            "supplierContractorContactName": {
              "type": "string"
            },
            "supplierContractorTelephone": {
              "type": "string"
            },
            "supplierContractorFax": {
              "type": "string"
            },
            "ppeOwnerDetails": {
              "type": "string"
            },
            "ppeSafeWorkingInfo": {
              "type": "string"
            },
            "ppeTestDate": {
              "type": "string",
              "format": "date"
            },
            "ppeRecordIssueDate": {
              "type": "string",
              "format": "date"
            },
            "ppeLastTestDate": {
              "type": "string",
              "format": "date"
            },
            "ppeCertificateNumber": {
              "type": "string"
            },
            "ppeRecordIssuedNumber": {
              "type": "string"
            },
            "ppeRecordNumber": {
              "type": "string"
            },
            "ppeDefects": {
              "type": "string"
            },
            "ppeRectifyBy": {
              "type": "string",
              "format": "date"
            },
            "ppeObservations": {
              "type": "string"
            },
            "ppeAuthenticatorDetails": {
              "type": "string"
            },
            "ppeExaminedBy": {
              "type": "string"
            },
            "ppeExaminersComments": {
              "type": "string"
            },
            "ppeDeclarationDate": {
              "type": "string",
              "format": "date"
            },
            "ppeNextExamDate": {
              "type": "string",
              "format": "date"
            },
            "ppeRecordDate": {
              "type": "string",
              "format": "date"
            },
            "ppeFacePieceCheck": {
              "type": "boolean"
            },
            "ppeFaceSealCheck": {
              "type": "boolean"
            },
            "ppeHarnessCheck": {
              "type": "boolean"
            },
            "ppeCleanlinessCheck": {
              "type": "boolean"
            },
            "ppeFiltersCheck": {
              "type": "boolean"
            },
            "ppeAlarmCheck": {
              "type": "boolean"
            },
            "ppeHoodCheck": {
              "type": "boolean"
            },
            "ppeAirLineCheck": {
              "type": "boolean"
            },
            "ppeAirFlowCheck": {
              "type": "boolean"
            },
            "ppePressureCheck": {
              "type": "boolean"
            },
            "ppeOtherCheck": {
              "type": "boolean"
            },
            "ppeResults": {
              "type": "string"
            },
            "ppeCheckedBy": {
              "type": "string"
            },
            "ppeCheckedDate": {
              "type": "string",
              "format": "date"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetOsha301GETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "incidentEventRecordId": {
              "type": "string"
            },
            "incidentEventReference": {
              "type": "string"
            },
            "oshaEstablishmentRecordId": {
              "type": "string"
            },
            "oshaEstablishmentReference": {
              "type": "string"
            },
            "oshaEstablishmentName": {
              "type": "string"
            },
            "osha301EmployeeFullName": {
              "type": "string"
            },
            "osha301EmployeeStreet": {
              "type": "string"
            },
            "osha301EmployeeCity": {
              "type": "string"
            },
            "osha301EmployeeState": {
              "type": "string"
            },
            "osha301EmployeeZip": {
              "type": "string"
            },
            "osha301EmployeeDateOfBirth": {
              "type": "string",
              "format": "date"
            },
            "osha301EmployeeJobTitle": {
              "type": "string"
            },
            "osha301EmployeeDateHired": {
              "type": "string",
              "format": "date"
            },
            "osha301EmployeeSex": {
              "type": "string"
            },
            "osha301PhysicianName": {
              "type": "string"
            },
            "osha301TreatmentFacility": {
              "type": "string"
            },
            "osha301FacilityStreet": {
              "type": "string"
            },
            "osha301FacilityCity": {
              "type": "string"
            },
            "osha301FacilityState": {
              "type": "string"
            },
            "osha301FacilityZip": {
              "type": "string"
            },
            "osha301EmergencyRoom": {
              "type": "boolean"
            },
            "osha301Overnight": {
              "type": "boolean"
            },
            "osha301CaseNumber": {
              "type": "string"
            },
            "osha301DateOfInjury": {
              "type": "string",
              "format": "date"
            },
            "osha301OccurredLocation": {
              "type": "string"
            },
            "osha301TimeBeganWork": {
              "type": "string"
            },
            "osha301TimeCannotBeDetermined": {
              "type": "boolean"
            },
            "osha301TimeOfEvent": {
              "type": "string"
            },
            "osha301BeforeIncident": {
              "type": "string"
            },
            "osha301WhatHappened": {
              "type": "string"
            },
            "osha301Injury": {
              "type": "string"
            },
            "osha301Object": {
              "type": "string"
            },
            "osha301InjuryIllnessShortDesc": {
              "type": "string"
            },
            "osha301DateOfDeath": {
              "type": "string",
              "format": "date"
            },
            "osha301Classification": {
              "type": "string"
            },
            "osha301DaysAwayFromWork": {
              "type": "integer"
            },
            "osha301DaysJobTransfer": {
              "type": "integer"
            },
            "osha301InjuryType": {
              "type": "string"
            },
            "personRecordId": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personFullName": {
              "type": "string"
            },
            "personJobTitle": {
              "type": "string"
            },
            "personTelephone": {
              "type": "string"
            },
            "osha301DateCompleted": {
              "type": "string",
              "format": "date"
            },
            "osha301RedLine": {
              "type": "boolean"
            },
            "osha301RedLineReason": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetOsha300aGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "oshaEstablishmentRecordId": {
              "type": "string"
            },
            "oshaEstablishmentReference": {
              "type": "string"
            },
            "oshaEstablishmentName": {
              "type": "string"
            },
            "osha300aYear": {
              "type": "integer"
            },
            "osha300aTypeOfEntry": {
              "type": "string"
            },
            "osha300aAvgEmployees": {
              "type": "number"
            },
            "osha300aHoursWorked": {
              "type": "number"
            },
            "osha300aTotalDeaths": {
              "type": "integer"
            },
            "osha300aTotalAwayFromWorkCases": {
              "type": "integer"
            },
            "osha300aTotalJobTransferCases": {
              "type": "integer"
            },
            "osha300aTotalOtherCases": {
              "type": "integer"
            },
            "osha300aTotalAwayFromWorkDays": {
              "type": "integer"
            },
            "osha300aTotalJobTransferDays": {
              "type": "integer"
            },
            "osha300aTotalInjuries": {
              "type": "integer"
            },
            "osha300aTotalSkinDisorders": {
              "type": "integer"
            },
            "osha300aTotalRespiratoryConditions": {
              "type": "integer"
            },
            "osha300aTotalPoisonings": {
              "type": "integer"
            },
            "osha300aTotalHearingLoss": {
              "type": "integer"
            },
            "osha300aTotalOtherIllnesses": {
              "type": "integer"
            },
            "osha300aChangeReason": {
              "type": "string"
            },
            "osha301RecordIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "osha301References": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetEquipMaintenanceGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitName": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "string"
            },
            "orgUnitExternalId": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "equipmentRecordId": {
              "type": "string"
            },
            "equipmentReference": {
              "type": "string"
            },
            "equipmentName": {
              "type": "string"
            },
            "equipmentSerialNumber": {
              "type": "string"
            },
            "equipmentAssetNumber": {
              "type": "string"
            },
            "equipmentModel": {
              "type": "string"
            },
            "equipmentType": {
              "type": "string"
            },
            "equipMaintenanceProcedure": {
              "type": "string"
            },
            "equipMaintenanceInspectionType": {
              "type": "string"
            },
            "supplierContractorRecordId": {
              "type": "string"
            },
            "supplierContractorReference": {
              "type": "string"
            },
            "supplierContractorName": {
              "type": "string"
            },
            "supplierContractorAddress1": {
              "type": "string"
            },
            "supplierContractorAddress2": {
              "type": "string"
            },
            "supplierContractorAddress3": {
              "type": "string"
            },
            "supplierContractorTown": {
              "type": "string"
            },
            "supplierContractorCounty": {
              "type": "string"
            },
            "supplierContractorPostcode": {
              "type": "string"
            },
            "supplierContractorContactName": {
              "type": "string"
            },
            "supplierContractorTelephone": {
              "type": "string"
            },
            "supplierContractorFax": {
              "type": "string"
            },
            "equipMaintenanceWorkDone": {
              "type": "string"
            },
            "equipMaintenanceInspectedBy": {
              "type": "string"
            },
            "equipMaintenanceInspectionDate": {
              "type": "string",
              "format": "date"
            },
            "equipMaintenanceTotalCost": {
              "type": "number"
            },
            "equipMaintenanceNextDate": {
              "type": "string",
              "format": "date"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "userPOSTRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "username",
          "fullname",
          "email",
          "defaultOrgUnitExternalId"
        ],
        "properties": {
          "username": {
            "description": "Unique login 'username' for the user. This cannot contain ~`^*?:<>\"\\/| characters. If a user already exists with the matching 'username' this user's details will be updated to match those provided (where the provided details omit any optional fields these will be set to their default values).",
            "type": "string",
            "pattern": "^[^~`^*?:<>\"\\\\\\/|]+$",
            "minLength": 1,
            "maxLength": 35
          },
          "fullname": {
            "description": "The user's full name. This is the name that will be displayed in the UI.",
            "type": "string",
            "minLength": 1,
            "maxLength": 60
          },
          "email": {
            "description": "The user's email address. This must be a correctly formatted email address without the display name (i.e. just the actual email address). Email addresses must be unique across all users for the customer.",
            "type": "string",
            "minLength": 1,
            "maxLength": 75
          },
          "defaultOrgUnitExternalId": {
            "description": "The user's default organisation unit identified by its unique customer defined external ID",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "linkedPersonRecordReference": {
            "description": "The linked person record reference for this user. If this field is omitted or null then the user is NOT linked to a person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "roles": {
            "description": "List of roles to be granted to this user for the specified organisation units. If this field is omitted or is empty then the user has no roles.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "roleExternalId",
                "orgUnitExternalId"
              ],
              "properties": {
                "roleExternalId": {
                  "description": "The unique customer defined external ID of the role to be granted to the organisation unit identified",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                },
                "orgUnitExternalId": {
                  "description": "The unique customer defined external ID of the organisation unit to which the specified role is to be granted to the user",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                },
                "includeChildUnits": {
                  "description": "Whether to include all child organisation units of the specified organisation unit in the role grant. If this field is omitted then the default is to NOT include child organisation units.",
                  "type": "boolean"
                }
              }
            }
          },
          "assureGoPlusOnly": {
            "description": "Whether to restrict the user to accessing Assure Go+ only. If this field is omitted then the default is access to Assure and Assure Go+.",
            "type": "boolean"
          },
          "isManager": {
            "description": "Is the user a manager. If this field is omitted then the user is NOT a manager.",
            "type": "boolean"
          },
          "managerUsername": {
            "description": "The unique login 'username' of this user's manager. If this field is omitted then the user is NOT associated with a manager.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "dateFormat": {
            "description": "The date format to use when showing dates to the user. If this field is present its value must be either DAY_FIRST (which equates to the format 'DD/MM/YYYY'), or MONTH_FIRST (which equates to the format 'MM/DD/YYYY'). If omitted the default format is DAY_FIRST.",
            "type": "string",
            "enum": [
              "DAY_FIRST",
              "MONTH_FIRST"
            ]
          },
          "languageCode": {
            "description": "The language of the user as expressed as an ISO 639-1 two-digit language code followed by a dash followed by an ISO 3166 country code, e.g. en-US. If this field is omitted then the customer's default language is used.",
            "type": "string",
            "minLength": 5,
            "maxLength": 5
          },
          "timezoneName": {
            "description": "The timezone of the user expressed as the Microsoft Windows timezone name. If this field is omitted then the customer's default timezone is used.",
            "type": "string",
            "enum": [
              "Dateline Standard Time",
              "UTC-11",
              "Aleutian Standard Time ",
              "Hawaiian Standard Time",
              "Marquesas Standard Time",
              "Alaskan Standard Time",
              "UTC-09",
              "Pacific Standard Time (Mexico)",
              "UTC-08",
              "Pacific Standard Time",
              "US Mountain Standard Time",
              "Mountain Standard Time (Mexico)",
              "Mountain Standard Time",
              "Yukon Standard Time",
              "Central America Standard Time",
              "Central Standard Time",
              "Easter Island Standard Time",
              "Central Standard Time (Mexico)",
              "Canada Central Standard Time",
              "SA Pacific Standard Time",
              "Eastern Standard Time (Mexico)",
              "Eastern Standard Time",
              "Haiti Standard Time",
              "Cuba Standard Time",
              "US Eastern Standard Time",
              "Turks And Caicos Standard Time",
              "Paraguay Standard Time",
              "Atlantic Standard Time",
              "Venezuela Standard Time",
              "Central Brazilian Standard Time",
              "SA Western Standard Time",
              "Pacific SA Standard Time",
              "Newfoundland Standard Time",
              "Tocantins Standard Time",
              "E. South America Standard Time",
              "SA Eastern Standard Time",
              "Argentina Standard Time",
              "Greenland Standard Time",
              "Montevideo Standard Time",
              "Magallanes Standard Time",
              "Saint Pierre Standard Time",
              "Bahia Standard Time",
              "UTC-02",
              "Mid-Atlantic Standard Time",
              "Azores Standard Time",
              "Cape Verde Standard Time",
              "UTC",
              "GMT Standard Time",
              "Greenwich Standard Time",
              "Sao Tome Standard Time",
              "Morocco Standard Time",
              "W. Europe Standard Time",
              "Central Europe Standard Time",
              "Romance Standard Time",
              "Central European Standard Time",
              "W. Central Africa Standard Time",
              "GTB Standard Time",
              "Middle East Standard Time",
              "Egypt Standard Time",
              "E. Europe Standard Time",
              "Syria Standard Time",
              "West Bank Standard Time",
              "South Africa Standard Time",
              "FLE Standard Time",
              "Israel Standard Time",
              "South Sudan Standard Time",
              "Kaliningrad Standard Time",
              "Sudan Standard Time",
              "Libya Standard Time",
              "Namibia Standard Time",
              "Jordan Standard Time",
              "Arabic Standard Time",
              "Turkey Standard Time",
              "Arab Standard Time",
              "Belarus Standard Time",
              "Russian Standard Time",
              "E. Africa Standard Time",
              "Volgograd Standard Time",
              "Iran Standard Time",
              "Arabian Standard Time",
              "Astrakhan Standard Time",
              "Azerbaijan Standard Time",
              "Russia Time Zone 3",
              "Mauritius Standard Time",
              "Saratov Standard Time",
              "Georgian Standard Time",
              "Caucasus Standard Time",
              "Afghanistan Standard Time",
              "West Asia Standard Time",
              "Ekaterinburg Standard Time",
              "Pakistan Standard Time",
              "Qyzylorda Standard Time",
              "India Standard Time",
              "Sri Lanka Standard Time",
              "Nepal Standard Time",
              "Bangladesh Standard Time",
              "Central Asia Standard Time",
              "Omsk Standard Time",
              "Myanmar Standard Time",
              "SE Asia Standard Time",
              "Altai Standard Time",
              "W. Mongolia Standard Time",
              "North Asia Standard Time",
              "N. Central Asia Standard Time",
              "Tomsk Standard Time",
              "China Standard Time",
              "North Asia East Standard Time",
              "Singapore Standard Time",
              "W. Australia Standard Time",
              "Taipei Standard Time",
              "Ulaanbaatar Standard Time",
              "Aus Central W. Standard Time",
              "Transbaikal Standard Time",
              "Tokyo Standard Time",
              "North Korea Standard Time",
              "Korea Standard Time",
              "Yakutsk Standard Time",
              "Cen. Australia Standard Time",
              "AUS Central Standard Time",
              "E. Australia Standard Time",
              "AUS Eastern Standard Time",
              "West Pacific Standard Time",
              "Tasmania Standard Time",
              "Vladivostok Standard Time",
              "Lord Howe Standard Time",
              "Bougainville Standard Time ",
              "Russia Time Zone 10",
              "Magadan Standard Time",
              "Norfolk Standard Time",
              "Sakhalin Standard Time",
              "Central Pacific Standard Time",
              "Russia Time Zone 11",
              "New Zealand Standard Time",
              "UTC+12",
              "Fiji Standard Time",
              "Kamchatka Standard Time",
              "Chatham Islands Standard Time",
              "UTC+13",
              "Tonga Standard Time",
              "Samoa Standard Time",
              "Line Islands Standard Time"
            ]
          },
          "sendPasswordReset": {
            "description": "Whether to trigger a password reset link to be sent to the user. This field is ignored on creation (as on creation a password reset email is always sent). Otherwise if this field is present and set to true then a password reset link is automatically sent.",
            "type": "boolean"
          },
          "requirePasswordChange": {
            "description": "Whether to require the user to change their password next time they login. This field is ignored on creation (as a password reset email will be sent). This field is ignored if the 'sendPasswordReset' field is present and set to true. Otherwise if this field is present and set to true then the user will have to change their password the next time they login.",
            "type": "boolean"
          },
          "supervisorPrivilegeExternalId": {
            "description": "The user's Supervisor Privilege identified by its unique customer defined external ID",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "maskedOrgUnitExternalId": {
            "description": "The unique identifier for the customers Organisation Unit that they want to set as the upper limit of the Organisation Hierarchy that the user can see. The default org unit will be set to the masked parent if the supplied default org unit is not in the hierarchical structure of the masked parent.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "sisenseRole": {
            "description": "The SiSense role identifier, choose from none, viewer or designer. This will default to none if not supplied.",
            "type": "string",
            "enum": [
              "NONE",
              "VIEWER",
              "DESIGNER"
            ]
          }
        }
      },
      "orgUnitPOSTRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "externalId",
          "name"
        ],
        "properties": {
          "externalId": {
            "description": "Unique externalId for the organisational unit. Each organisational unit must have a unique externalId. If an organisational unit already exists with the supplied externalId the organisational unit with the matching externalId will be updated.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "name": {
            "description": "The name of the organisational unit.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "details": {
            "description": "Details of the organisational unit.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "parentExternalId": {
            "description": "The externalId of the parent organisational unit. This field is required for all organisational units apart from the root organisation unit where it must be omitted. If this field is omitted for a non-root organisational unit you will receive a 400 response.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "incidentRegion": {
            "description": "The Incident region of the organisational unit. If this field is omitted or is empty then the default incident region is NONE.",
            "type": "string",
            "enum": [
              "NONE",
              "OSHA",
              "RIDDOR"
            ]
          },
          "applyIncidentRegionToChildUnits": {
            "description": "When updating an organisational unit this field specifies if the incident region should also apply to child units. During a create as an organisational unit has no children setting this field will not make any changes. If this field is omitted or is empty then the default is set to false.",
            "type": "boolean"
          },
          "frequencyRateRecording": {
            "description": "Whether an accident incident frequency rate should be created for this record. If this field is set to 'CREATE' a incident frequency rate record is created for this organisational unit and its child units that aren't excluded. If it is set to 'EXCLUDE', this organisational unit is excluded from all  incident frequency rate records. If it is set to 'INCLUDE', no incident frequency rate record is created specifically for this organisational unit but it will be included in parent records. If this field is omitted the default will be 'INCLUDE'.",
            "type": "string",
            "enum": [
              "INCLUDE",
              "CREATE",
              "EXCLUDE"
            ]
          },
          "defaultUsers": {
            "description": "Default users for the organisational unit.",
            "type": "object",
            "properties": {
              "assigneeUsername": {
                "description": "The default assignee's username. If this field is omitted or is empty then there is no default assignee for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "approverUsername": {
                "description": "The default approver's username. If this field is omitted or is empty then there is no default approver for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "reviewerUsername": {
                "description": "The default reviewer's username. If this field is omitted or is empty then there is no default reviewer for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "notificationRecipientUsername": {
                "description": "The default notification recipient's username. If this field is omitted or is empty then there is no default notification recipient for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "portalReminderRecipientUsername": {
                "description": "The default portal reminder recipient's username. If this field is omitted or is empty then there is no default portal reminder recipient for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "autoActionRecipientUsername": {
                "description": "The default automatic action recipient's username. If this field is omitted or is empty then there is no default auto action recipient for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "assureGoPlusActionRaisedByUsername": {
                "description": "The default assureGO+ Action raised By's username. If this field is omitted or is empty then there is no default user assigned to assure go plus action raised by for the organisational unit.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "assureGoPlusActionRecipientUsername": {
                "description": "The default AssureGo+ action recipient's username. If this field is omitted or is empty then there is no default AssureGo+ action recipient for the organisational unit. ",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "humanResourcesRecipientUsername": {
                "description": "The default human resources recipient's username. If this field is omitted or is empty then there is no default human resources recipient for the organisational unit. ",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "alternativeHumanResourcesRecipientUsername": {
                "description": "The default alternative human resources recipient's username. If this field is omitted or is empty then there is no default alternative human resources recipient for the organisational unit. ",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "moduleOverrides": {
                "description": "Specifies if specific modules should have default users overriding the current defaults. If this field is omitted or is empty then there are no module overrides for this organisational unit.",
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "module"
                  ],
                  "properties": {
                    "module": {
                      "description": "The module that will have default user overrides for the organisational unit.",
                      "type": "string",
                      "enum": [
                        "project-risk",
                        "activity-risk",
                        "coshh",
                        "msds",
                        "ghs-sds",
                        "dse",
                        "manual-handling",
                        "fire-risk",
                        "noise",
                        "general-risk",
                        "hazard-spotting",
                        "hs-file",
                        "incident-event",
                        "vehicle-incident",
                        "investigation",
                        "riddor",
                        "claim",
                        "incident-analysis",
                        "incident-rate",
                        "vehicle-register",
                        "person",
                        "employment",
                        "course",
                        "training",
                        "tna",
                        "tna-template",
                        "health",
                        "driving",
                        "equipment",
                        "equipment-maintenance",
                        "equipment-issue",
                        "lifting-equipment",
                        "electrical-testing",
                        "ppe",
                        "behavioural",
                        "safe-unsafe",
                        "procedural",
                        "notification-of-project",
                        "pre-tender",
                        "construction-phase",
                        "supplier-contractor",
                        "environmental",
                        "air-emissions",
                        "release-to-water",
                        "land-contamination",
                        "waste-transfer",
                        "waste-material",
                        "waste-handler",
                        "project",
                        "f2508",
                        "f2508a",
                        "policy",
                        "aspect-impact",
                        "aspect-impact-component",
                        "aspect-impact-reporting",
                        "coshh-activity",
                        "osha-establishment",
                        "osha301",
                        "osha300a",
                        "job-hazard-analysis",
                        "covid19-management"
                      ]
                    },
                    "applyToChildUnits": {
                      "description": "Specifies if overrides should also apply to child units. If this field is omitted or is empty then the default is set to false.",
                      "type": "boolean"
                    },
                    "assigneeUsername": {
                      "description": "The default assignee's username. If this field is omitted or is empty then there will be no overriding assignee for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    },
                    "approverUsername": {
                      "description": "The default approver's username. If this field is omitted or is empty then there will be no overriding approver for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    },
                    "reviewerUsername": {
                      "description": "The default reviewer's username. If this field is omitted or is empty then there will be no overriding reviewer for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    },
                    "notificationRecipientUsername": {
                      "description": "The notification recipient's username. If this field is omitted or is empty then there will be no overriding notification recipient for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    },
                    "portalReminderRecipientUsername": {
                      "description": "The portal reminder recipient's username. If this field is omitted or is empty then there will be no overriding portal reminder recipient for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    },
                    "automaticActionRecipientUsername": {
                      "description": "The automatic action recipient's username. If this field is omitted or is empty then there will be no overriding automatic action recipient for the specified module in this organisational unit.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 35
                    }
                  }
                }
              }
            }
          }
        }
      },
      "personRegisterPOSTRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "reference",
          "forename",
          "surname",
          "orgUnitExternalId"
        ],
        "properties": {
          "forename": {
            "description": "The person register record's forename(s).",
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "surname": {
            "description": "The person register record's surname",
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "reference": {
            "description": "A unique reference for the person register record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "isConfidential": {
            "description": "Specifies if the record is should be marked as confidential. If this field is omitted or null then the default is set to false.",
            "type": "boolean"
          },
          "isCurrent": {
            "description": "Specifies if the record is should be marked as current. If this field is omitted or null then the default is set to true.",
            "type": "boolean"
          },
          "orgUnitExternalId": {
            "description": "The Person Registers record's default organisation unit identified by its unique customer defined external ID.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "linkedUsername": {
            "description": "The linked username of the person register record. If this field is omitted or null then there will be no linked user (Linked User License) for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "title": {
            "description": "The person register record's title. This value must match a value defined in the picklist data dictionary for this field.  If this field is omitted or null then there will be no title for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "dateOfBirth": {
            "description": "The person register record's date of birth. This value must be in the format YYYY-MM-DD. If this field is omitted or null then there will be no date of birth for this person record.",
            "type": "string",
            "minLength": 10,
            "maxLength": 25
          },
          "maritalStatus": {
            "description": "The person register record's marital status. This value must match a value defined in the picklist data dictionary for this field. If this field is null then there will be no martial status for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "niNumber": {
            "description": "The person register record's NI number. If this field is omitted or null then there will be no NI number for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "nationality": {
            "description": "The person register record's nationality. If this field is omitted or null then there will be no nationality for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "shift": {
            "description": "The person register record's shift. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no shift for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "occupation": {
            "description": "The person register record's occupation. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no occupation for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "phone": {
            "description": "The person register record's phone number. If this field is omitted or null then there will be no phone number for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "mobile": {
            "description": "The person register record's mobile number. If this field is omitted or null then there will be no mobile number for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "email": {
            "description": "The person register record's email address. If this field is omitted or null then there will be no email for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "typeOfPerson": {
            "description": "The person register record's type of person. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no type of person for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "managerName": {
            "description": "The person register record's type of managers name. If this field is omitted or null then there will be no manager name for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "managerPhone": {
            "description": "The person register record's type of managers phone. If this field is omitted or null then there will be no manager phone number for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "ageRange": {
            "description": "The person register record's type of age range. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no age range for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "jobTitle": {
            "description": "The person register record's type of job title. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no job title for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "address1": {
            "description": "The person register record's address1. If this field is omitted or null then there will be no address1 for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "address2": {
            "description": "The person register record's address2. If this field is omitted or null then there will be no address2 for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "address3": {
            "description": "The person register record's address3. If this field is omitted or null then there will be no address3 for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "town": {
            "description": "The person register record's town. If this field is omitted or null then there will be no town for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "county": {
            "description": "The person register record's county. If this field is omitted or null then there will be no county for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "postcode": {
            "description": "The person register record's postcode. If this field is omitted or null then there will be no postcode for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "location": {
            "description": "The person register record's location. If this field is omitted or null then there will be no location for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "locality": {
            "description": "The person register record's locality. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no locality for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "sex": {
            "description": "The person register record's sex. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no sex for this person record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "nextOfKin": {
            "description": "The next of kin details.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The person register record's next of kin's name. If this field is omitted or null then there will be no next of kin name for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "address1": {
                "description": "The person register record's next of kin's address line 1. If this field is omitted or null then there will be no next of kin address line 1 for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "address2": {
                "description": "The person register record's next of kin's address line 2. If this field is omitted or null then there will be no next of kin address line 2 for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "address3": {
                "description": "The person register record's next of kin's address line 3. If this field is omitted or null then there will be no next of kin address line 3 for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "town": {
                "description": "The person register record's next of kin's town. If this field is omitted or null then there will be no next of kin town for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "county": {
                "description": "The person register record's next of kin's country. If this field is omitted or null then there will be no next of kin county for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "postcode": {
                "description": "The person register record's next of kin's postcode. If this field is omitted or null then there will be no next of kin postcode for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "phone": {
                "description": "The person register record's next of kin's phone number. If this field is omitted or null then there will be no next of kin phone number for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "relationship": {
                "description": "The person register record's next of kin's relationship. If this field is omitted or null then there will be no next of kin relationship for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "mobile": {
                "description": "The person register record's next of kin's mobile number. If this field is omitted or null then there will be no next of kin mobile number for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              },
              "email": {
                "description": "The person register record's next of kin's email address. If this field is omitted or null then there will be no next of kin email address for this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              },
              "notes": {
                "description": "The person register record's notes. If this field is omitted or null then there will be no next of notes this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100000
              },
              "additionalField1": {
                "description": "The person register record's additional field 1. If this field is omitted or null then there will be no value for additional field 1 in this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "additionalField2": {
                "description": "The person register record's additional field 2. If this field is omitted or null then there will be no value for additional field 2 in this person record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              }
            }
          }
        }
      },
      "incidentAnalysisPOSTRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "reference",
          "orgUnitExternalId",
          "dataInterval",
          "numberOfManHoursWorked"
        ],
        "properties": {
          "reference": {
            "description": "A unique reference for the incident analysis record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "orgUnitExternalId": {
            "description": "The Incident Analysis record's default organisation unit identified by its unique customer defined external ID.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "isConfidential": {
            "description": "Specifies if the record should be marked as confidential. If this field is omitted or null then the default is set to false.",
            "type": "boolean"
          },
          "dataInterval": {
            "description": "The incident analysis record's Data Interval. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no data interval for this incident analysis record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "locality": {
            "description": "The incident analysis record's Locality. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no locality for this incident analysis record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "analysisMonth": {
            "description": "Specifies the analysis month of the incident analysis record",
            "type": "string",
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ]
          },
          "analysisYear": {
            "description": "Specifies the analysis year of the incident analysis record",
            "type": "integer"
          },
          "specifyInterval": {
            "description": "The incident analysis records specific interval.",
            "type": "object",
            "properties": {
              "fromDate": {
                "description": "Specifies the incident analysis record's intervals from date. This value must be in the format YYYY-MM-DD. If you do not specify this field the from date will default to the first day of the month and year provided in the 'analysisMonth' and 'analysisYear' fields. If they are also not provided in these fields an error will be returned",
                "type": "string",
                "minLength": 10,
                "maxLength": 25
              },
              "toDate": {
                "description": "Specifies the incident analysis record's intervals to date. This value must be in the format YYYY-MM-DD. If you do not specify this field the to date will default to the last day of the month and year provided in the 'analysisMonth' and 'analysisYear' fields. If they are also not provided in these fields an error will be returned",
                "type": "string",
                "minLength": 10,
                "maxLength": 25
              }
            }
          },
          "numberOfEmployees": {
            "description": "Specifies the average number of employees for the Incident Analysis record.",
            "type": "number",
            "minimum": 0,
            "maximum": 1e+16,
            "multipleOf": 0.01
          },
          "numberOfManHoursWorked": {
            "description": "Specifies the number of man hours worked for the Incident Analysis record. If this value is omitted or null it will default to 0.",
            "type": "number",
            "minimum": 0,
            "maximum": 1e+16,
            "multipleOf": 0.01
          },
          "OSHA300AReference": {
            "description": "This links a OSHA300A record to this incident analysis record from the provided reference. If the reference provided is shared by multiple OSHA300A records then an error will be returned. If the 'Year Filing For' in the OSHA300A record is not the same year as the 'specifyInterval' field in this record an error will be returned. If this field is omitted or null then there will be no OSHA300A record linked to this Incident Analysis record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "lifetimeHours": {
            "description": "Specifies the standard lifetime working hours for the Incident Analysis record.",
            "type": "number",
            "minimum": 0,
            "maximum": 1e+16,
            "multipleOf": 0.01
          },
          "cascadeResults": {
            "description": "Specifies if the incident analysis results should be assigned to the associated organisational unit and its child units.",
            "type": "boolean"
          },
          "supplyAnalysis": {
            "description": "This field will determine how the incident analysis object is filled out. 'NONE' will overwrite the field to have no details, 'MANUAL' will allow for manual input of the fields and 'AUTO-CALCULATE' will overwrite the fields with the automatic calculations.",
            "type": "string",
            "enum": [
              "NONE",
              "MANUAL",
              "AUTO-CALCULATE"
            ]
          },
          "incidentAnalysis": {
            "description": "The incident analysis records specific interval.",
            "type": "object",
            "properties": {
              "TotalLostTimeAccidents": {
                "description": "Specifies the total number of lost time accidents for the Incident Analysis record.",
                "type": "number",
                "minimum": 0,
                "maximum": 1e+16,
                "multipleOf": 0.01
              },
              "TotalReportableAccidents": {
                "description": "Specifies the total number of reportable accidents for the Incident Analysis record.",
                "type": "number",
                "minimum": 0,
                "maximum": 1e+16,
                "multipleOf": 0.01
              },
              "TotalAccidents": {
                "description": "Specifies the total number of accidents for the Incident Analysis record.",
                "type": "number",
                "minimum": 0,
                "maximum": 1e+16,
                "multipleOf": 0.01
              },
              "InjuryFrequencyRate": {
                "description": "Specifies the number of all injury frequency rate for the Incident Analysis record.",
                "type": "number",
                "minimum": 0,
                "maximum": 1e+16,
                "multipleOf": 0.01
              },
              "IncidenceRate": {
                "description": "Specifies the incidence rate for the Incident Analysis record.",
                "type": "number",
                "minimum": 0,
                "maximum": 1e+16,
                "multipleOf": 0.01
              },
              "IncidentRate": {
                "description": "Specifies the incident rate for the Incident Analysis record.",
                "type": "number",
                "minimum": 0,
                "maximum": 1e+16,
                "multipleOf": 0.01
              }
            }
          }
        }
      },
      "claimPOSTRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "reference",
          "orgUnitExternalId",
          "incidentDate"
        ],
        "properties": {
          "reference": {
            "description": "A unique reference for the claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "orgUnitExternalId": {
            "description": "The Claims Management record's default organisation unit identified by its unique customer defined external ID.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "isConfidential": {
            "description": "Specifies if the record should be marked as confidential. If this field is omitted or null then the default is set to false.",
            "type": "boolean"
          },
          "incidentReference": {
            "description": "This links an Incident record to this claims management record from the provided reference. If the reference provided is shared by multiple Incident records then an error will be returned. If this field is omitted or null then there will be no incident reference linked to this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "vehicleIncidentReference": {
            "description": "This links a Vehicle Incident record to this claims management record from the provided reference. If the reference provided is shared by multiple Vehicle Incident records then an error will be returned. If this field is omitted or null then there will be no vehicle incident reference linked to this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "typeOfClaim": {
            "description": "The claims management record's type of claim. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no type of claim for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "investigationDate": {
            "description": "The claims management record's investigation date. This value must be in the format YYYY-MM-DD. If this field is omitted or null then there will be no investigation date for this claims management record.",
            "type": "string",
            "minLength": 10,
            "maxLength": 25
          },
          "incidentDate": {
            "description": "The claims management record's incident date. This value must be in the format YYYY-MM-DD.",
            "type": "string",
            "minLength": 10,
            "maxLength": 25
          },
          "notificationDate": {
            "description": "The claims management record's notification date. This value must be in the format YYYY-MM-DD. If this field is omitted or null then there will be no notification date for this claims management record.",
            "type": "string",
            "minLength": 10,
            "maxLength": 25
          },
          "description": {
            "description": "The claims management record's description. If this field is omitted or null then there will be no description for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "location": {
            "description": "The claims management record's location. If this field is omitted or null then there will be no location for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "locality": {
            "description": "The claims management record's locality. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no locality for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "natureOfIncident": {
            "description": "The claims management record's nature of incident. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no nature of incident for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "incidentDetails": {
            "description": "The claims management record's incident details. If this field is omitted or null then there will be no incident details for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100000
          },
          "manager": {
            "description": "The claims management record's manager. If this field is omitted or null then there will be no manager for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 250
          },
          "probability": {
            "description": "The claims management record's probability. If this field is omitted or null then there will be no probability for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "stageOfClaim": {
            "description": "The claims management record's stage of claim. If this field is omitted or null then there will be no stage of claim for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "currentPosition": {
            "description": "The claims management record's current claim position. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no current position for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "outcome": {
            "description": "The claims management record's outcome. If this field is omitted or null then there will be no outcome for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100000
          },
          "costCentre": {
            "description": "The claims management record's cost centre. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no cost centre for this claims management record.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "settlementDetails": {
            "description": "The Settlement Details sub-section of the claims management record.",
            "type": "object",
            "properties": {
              "interimPaymentDate": {
                "description": "The claims management record's interim payment date. This value must be in the format YYYY-MM-DD. If this field is omitted or null then there will be no interim payment date for this claims management record.",
                "type": "string",
                "minLength": 10,
                "maxLength": 25
              },
              "settlementDate": {
                "description": "The claims management record's settlement date. This value must be in the format YYYY-MM-DD. If this field is omitted or null then there will be no settlement date for this claims management record.",
                "type": "string",
                "minLength": 10,
                "maxLength": 25
              },
              "costs": {
                "description": "The estimated and actual costs associated with the claim.",
                "type": "object",
                "properties": {
                  "estimated": {
                    "description": "The estimated costs associated with the claim. The values provided in this object will be used to calculate the total estimated costs for the claim.",
                    "type": "object",
                    "properties": {
                      "initialReserve": {
                        "description": "The initial reserve estimate. If the currentReserve field has a value this field will be non-editable. If this field is omitted or null then there will be no initial reserve estimate for this claims management record.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      },
                      "currentReserve": {
                        "description": "The current reserve estimate. If this field is omitted or null then there will be no current reserve estimate for this claims management record except if a value is entered into either of the following fields(plaintiff, defence, VAT or excess) then it will be 0.00.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      },
                      "plaintiffCosts": {
                        "description": "The plaintiff costs estimate. If this field is omitted or null then there will be no plaintiff costs estimate for this claims management record except if a value is entered into either of the following fields(currentReserve, defence, VAT or excess) then it will be 0.00.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      },
                      "defenceCosts": {
                        "description": "The defence costs estimate. If this field is omitted or null then there will be no defence costs estimate for this claims management record except if a value is entered into either of the following fields(currentReserve, plaintiff, VAT or excess) then it will be 0.00.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      },
                      "vat": {
                        "description": "The VAT estimate. If this field is omitted or null then there will be no VAT estimate for this claims management record except if a value is entered into either of the following fields(currentReserve, plaintiff, defence or excess) then it will be 0.00.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      },
                      "excess": {
                        "description": "The excess estimate. If this field is omitted or null then there will be no excess estimate for this claims management record except if a value is entered into either of the following fields(currentReserve, plaintiff, defence or VAT) then it will be 0.00.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      }
                    }
                  },
                  "actual": {
                    "description": "The actual costs associated with the claim. The values provided in this object will be used to calculate the total actual costs for the claim.",
                    "type": "object",
                    "properties": {
                      "interimPayment": {
                        "description": "The interim payment actual. If this field is omitted or null then there will be no interim payment actual for this claims management record except if a value is entered into either of the following fields(plaintiff, defence, VAT or excess) then it will be 0.00.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      },
                      "plaintiffCosts": {
                        "description": "The plaintiff costs actual. If this field is omitted or null then there will be no plaintiff costs actual for this claims management record except if a value is entered into either of the following fields(interimPayment, defence, VAT or excess) then it will be 0.00.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      },
                      "defenceCosts": {
                        "description": "The defence costs actual. If this field is omitted or null then there will be no defence costs actual for this claims management record except if a value is entered into either of the following fields(interimPayment, plaintiff, VAT or excess) then it will be 0.00.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      },
                      "vat": {
                        "description": "The VAT actual. If this field is omitted or null then there will be no VAT actual for this claims management record except if a value is entered into either of the following fields(interimPayment, plaintiff, defence or excess) then it will be 0.00.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      },
                      "excess": {
                        "description": "The excess actual. If this field is omitted or null then there will be no excess actual for this claims management record except if a value is entered into either of the following fields(interimPayment, plaintiff, defence or VAT) then it will be 0.00.",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1e+16,
                        "multipleOf": 0.01
                      }
                    }
                  }
                }
              },
              "settlementComments": {
                "description": "The claims management record's settlement comments. If this field is omitted or null then there will be no settlement comments for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100000
              }
            }
          },
          "interestedParties": {
            "description": "The Interested Parties section.",
            "type": "object",
            "properties": {
              "insurerReference": {
                "description": "The claims management record's insurer reference. If this field is omitted or null then there will be no insurer reference for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 250
              },
              "insurerDetails": {
                "description": "The claims management record's insurer details. If this field is omitted or null then there will be no insurer details for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100000
              },
              "brokerReference": {
                "description": "The claims management record's broker reference. If this field is omitted or null then there will be no broker reference for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 250
              },
              "brokerDetails": {
                "description": "The claims management record's broker details. If this field is omitted or null then there will be no broker details for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100000
              },
              "defenceSolicitor": {
                "description": "The claims management record's defence solicitor/legal representative. If this field is omitted or null then there will be no defence solicitor for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100000
              },
              "lossAdjuster": {
                "description": "The claims management record's loss adjuster/investigator. If this field is omitted or null then there will be no loss adjuster for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100000
              },
              "otherParties": {
                "description": "The claims management record's names of other parties involved in the claim and proportionate share of costs. If this field is omitted or null then there will be no names of other parties involved in the claim and proportionate share of costs for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100000
              }
            }
          },
          "claimants": {
            "description": "The Claimants section.",
            "type": "object",
            "properties": {
              "surname": {
                "description": "The claims management record's claimant's surname. If this field is omitted or null then there will be no claimant surname for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "forename": {
                "description": "The claims management record's claimant's forename. If this field is omitted or null then there will be no claimant forename for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "address1": {
                "description": "The claims management record's claimant's address line 1. If this field is omitted or null then there will be no claimant address line 1 for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "address2": {
                "description": "The claims management record's claimant's address line 2. If this field is omitted or null then there will be no claimant address line 2 for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "address3": {
                "description": "The claims management record's claimant's address line 3. If this field is omitted or null then there will be no claimant address line 3 for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "town": {
                "description": "The claims management record's claimant's town. If this field is omitted or null then there will be no claimant town for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "county": {
                "description": "The claims management record's claimant's county. If this field is omitted or null then there will be no claimant county for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "postcode": {
                "description": "The claims management record's claimant's postcode. If this field is omitted or null then there will be no claimant postcode for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 10
              },
              "dateOfBirth": {
                "description": "The claims management record's claimant's date of birth. This value must be in the format YYYY-MM-DD. If this field is omitted or null then there will be no claimant date of birth for this claims management record.",
                "type": "string",
                "minLength": 10,
                "maxLength": 25
              },
              "dateOfDeath": {
                "description": "The claims management record's claimant's date of death. This value must be in the format YYYY-MM-DD. If this field is omitted or null then there will be no claimant date of death for this claims management record.",
                "type": "string",
                "minLength": 10,
                "maxLength": 25
              },
              "age": {
                "description": "The claims management record's claimant's age. If this field is omitted or null then there will be no claimant age for this claims management record.",
                "type": "integer"
              },
              "sex": {
                "description": "The claims management record's claimant's sex. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no claimant sex for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              },
              "occupation": {
                "description": "The claims management record's claimant's occupation. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no claimant occupation for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              },
              "shift": {
                "description": "The claims management record's claimant's shift. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no claimant shift for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              },
              "lostTimeDays": {
                "description": "The claims management record's claimant's lost time days. If this field is omitted or null then there will be no claimant lost time days for this claims management record.",
                "type": "integer"
              },
              "injuryType": {
                "description": "The claims management record's claimant's injury type. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no claimant injury type for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              },
              "apparentCause": {
                "description": "The claims management record's claimant's apparent cause. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no claimant apparent cause for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              },
              "partOfBodyAffected": {
                "description": "The claims management record's claimant's part(s) of body affected. This value must match a value defined in the picklist data dictionary for this field. If this field is omitted or null then there will be no claimant part of body affected for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              },
              "resultantDisabilityOrHarm": {
                "description": "The claims management record's claimant's resultant disability or harm. If this field is omitted or null then there will be no claimant resultant disability or harm for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 75
              },
              "plaintiffName": {
                "description": "The claims management record's claimant's plaintiff name. If this field is omitted or null then there will be no claimant plaintiff name for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "plaintiffSolicitor": {
                "description": "The claims management record's claimant's plaintiff solicitor. If this field is omitted or null then there will be no claimant plaintiff solicitor for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              }
            }
          },
          "otherInformation": {
            "description": "The Other Information section.",
            "type": "object",
            "properties": {
              "defenceNature": {
                "description": "The claims management record's nature of proposed defence. If this field is omitted or null then there will be no nature of proposed defence for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100000
              },
              "namesOfExpertWitnesses": {
                "description": "The claims management record's names of expert witnesses. If this field is omitted or null then there will be no names of expert witnesses for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100000
              },
              "negligenceOrCausationAdvice": {
                "description": "This sub-section contains expert advice obtained regarding negligence or causation.",
                "type": "object",
                "properties": {
                  "isInternal": {
                    "description": "Specifies if the expert advice obtained regarding negligence or causation is internal. If this field is omitted or null then the default is set to false.",
                    "type": "boolean"
                  },
                  "isExternal": {
                    "description": "Specifies if the expert advice obtained regarding negligence or causation is external. If this field is omitted or null then the default is set to false.",
                    "type": "boolean"
                  },
                  "hasExchangedWitnessReports": {
                    "description": "Specifies if the expert advice obtained regarding negligence or causation has exchanged witness reports. If this field is omitted or null then the default is set to false.",
                    "type": "boolean"
                  },
                  "notes": {
                    "description": "The claims management record's expert advice obtained regarding negligence or causation notes. If this field is omitted or null then there will be no expert advice obtained regarding negligence or causation notes for this claims management record.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100000
                  }
                }
              },
              "quantumAdvice": {
                "description": "This sub-section contains expert advice obtained regarding quantum.",
                "type": "object",
                "properties": {
                  "isInternal": {
                    "description": "Specifies if the expert advice obtained regarding quantum is internal. If this field is omitted or null then the default is set to false.",
                    "type": "boolean"
                  },
                  "isExternal": {
                    "description": "Specifies if the expert advice obtained regarding quantum is external. If this field is omitted or null then the default is set to false.",
                    "type": "boolean"
                  },
                  "hasExchangedWitnessReports": {
                    "description": "Specifies if the expert advice obtained regarding quantum has exchanged witness reports. If this field is omitted or null then the default is set to false.",
                    "type": "boolean"
                  },
                  "notes": {
                    "description": "The claims management record's expert advice obtained regarding quantum notes. If this field is omitted or null then there will be no expert advice obtained regarding quantum notes for this claims management record.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100000
                  }
                }
              },
              "isComplaint": {
                "description": "Specifies if the claimant has made a complaint. If this field is omitted or null then the default is set to false.",
                "type": "boolean"
              },
              "numberOfPeopleInjured": {
                "description": "Specifies the number of people injured.",
                "type": "integer"
              },
              "isAlternativeDisputeResolution": {
                "description": "Specifies if the claimant has used alternative form of dispute resolution. If this field is omitted or null then the default is set to false.",
                "type": "boolean"
              },
              "alternativeResolution": {
                "description": "The claims management record's alternative resolution. If isAlternativeDisputeResolution field is null or false any details provided for this field will not be assigned. If this field is omitted or null then there will be no alternative resolution for this claims management record.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100000
              },
              "isStructuringFeasible": {
                "description": "Specifies if structuring is feasible.",
                "type": "boolean"
              },
              "isAcceptableToPlaintiff": {
                "description": "Specifies if the settlement is acceptable to the plaintiff. If this field is omitted or null then the default is set to false.",
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}