{
  "openapi": "3.0.1",
  "info": {
    "title": "Customer API",
    "version": "latest"
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "paths": {
    "/export/dataset/vehicle-incident": {
      "get": {
        "description": "Retrieve the most recent Vehicle Incident dataset export in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed (either daily or monthly as configured). It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is be be visualised/processed. Note that exports are only available in the preconfigured format (JSON or CSV).",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the Vehicle Incident dataset export. Contents are array of Vehicle Incident records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetVehicleIncidentGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "dataextract-custom-auth": []
          }
        ]
      }
    },
    "/export/dataset/incident-event": {
      "get": {
        "description": "Retrieve the most recent Incident Event dataset export in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed (either daily or monthly as configured). It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is be be visualised/processed. Note that exports are only available in the preconfigured format (JSON or CSV).",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the Incident Event dataset export. Contents are array of Incident Event records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetIncidentEventGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "dataextract-custom-auth": []
          }
        ]
      }
    },
    "/export/dataset/procedural": {
      "get": {
        "description": "Retrieve the most recent Procedural Audit dataset export in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed (either daily or monthly as configured). It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is be be visualised/processed. Note that exports are only available in the preconfigured format (JSON or CSV).",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the Procedural Audit dataset export. Contents are array of records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetProceduralGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "dataextract-custom-auth": []
          }
        ]
      }
    },
    "/export/dataset/hazard-spotting": {
      "get": {
        "description": "Retrieve the most recent Hazard Spotting dataset export in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed (either daily or monthly as configured). It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is be be visualised/processed. Note that exports are only available in the preconfigured format (JSON or CSV).",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the Hazard Spotting dataset export. Contents are array of records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetHazardSpottingGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "dataextract-custom-auth": []
          }
        ]
      }
    },
    "/export/dataset/person": {
      "get": {
        "description": "Retrieve the most recent Person dataset export in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed (either daily or monthly as configured). It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is be be visualised/processed. Note that exports are only available in the preconfigured format (JSON or CSV).",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the Person dataset export. Contents are array of records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetPersonGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "dataextract-custom-auth": []
          }
        ]
      }
    },
    "/export/dataset/general-risk": {
      "get": {
        "description": "Retrieve the most recent General Risk dataset export in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed (either daily or monthly as configured). It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is be be visualised/processed. Note that exports are only available in the preconfigured format (JSON or CSV).",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the General Risk dataset export. Contents are array of General Risk records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetGeneralRiskGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "dataextract-custom-auth": []
          }
        ]
      }
    },
    "/export/dataset/training": {
      "get": {
        "description": "Retrieve the most recent Training dataset export in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed (either daily or monthly as configured). It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is be be visualised/processed. Note that exports are only available in the preconfigured format (JSON or CSV).",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the Training dataset export. Contents are array of Training records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetTrainingGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "dataextract-custom-auth": []
          }
        ]
      }
    },
    "/export/dataset/equipment": {
      "get": {
        "description": "Retrieve the most recent Equipment Register dataset export in the requested format. This API is only intended to be used to extract the dataset export when it has been refreshed (either daily or monthly as configured). It is NOT intended to be used 'on demand' to retrieve the dataset whenever the data is be be visualised/processed. Note that exports are only available in the preconfigured format (JSON or CSV).",
        "responses": {
          "200": {
            "description": "200 response - Successful retrieval of the Equipment Register dataset export. Contents are array of Equipment Register records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportDatasetEquipmentGETResponse"
                }
              },
              "text/csv": {},
              "application/csv": {}
            }
          },
          "400": {
            "description": "400 response - Invalid request parameters or content, check required path/query parameters and/or content has been provided. See response body for more details."
          },
          "401": {
            "description": "401 response - Authentication failed. Ensure a valid API key string has been provided in the 'x-api-key' HTTP header."
          },
          "404": {
            "description": "404 response - There is no dataset present. Ensure this dataset is enabled to be generated via Assure configuration. Note that datasets are only generated once in the configured period (so you may need to wait for the end of the period for the dataset to be generated for the first time)."
          },
          "429": {
            "description": "429 response - API request was rejected due to API rate limiting."
          },
          "500": {
            "description": "500 response - An internal error prevented the request from completing. See response body for more details."
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "dataextract-custom-auth": []
          }
        ]
      }
    },
    "/ping": {
      "get": {
        "description": "DIAGNOSTIC USE ONLY - Provides confirmation that the API is reachable and that the API key is valid. Usage of this resource is throttled to prevent misuse (do not use this as part of regular integration processes).",
        "responses": {
          "200": {
            "description": "Return 200 response if the caller providers a valid API key"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "exportDatasetVehicleIncidentGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "integer"
            },
            "orgUnitName": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "incidentLocation": {
              "type": "string"
            },
            "incidentLocality": {
              "type": "string"
            },
            "incidentType": {
              "type": "string"
            },
            "incidentSeverity": {
              "type": "string"
            },
            "incidentLocationType": {
              "type": "string"
            },
            "incidentOccurredAt": {
              "type": "string",
              "format": "date-time"
            },
            "incidentReportedBy": {
              "type": "string"
            },
            "incidentReportedTo": {
              "type": "string"
            },
            "incidentReportedByDate": {
              "type": "string",
              "format": "date"
            },
            "incidentReportedToDate": {
              "type": "string",
              "format": "date"
            },
            "incidentDetails": {
              "type": "string"
            },
            "incidentWeather": {
              "type": "string"
            },
            "incidentWitnesses": {
              "type": "string"
            },
            "incidentConclusion": {
              "type": "string"
            },
            "responsibleParty": {
              "type": "string"
            },
            "responsiblePartyOther": {
              "type": "string"
            },
            "responsiblePartyWhy": {
              "type": "string"
            },
            "vehicleType": {
              "type": "string"
            },
            "vehicleRegistrationPlate": {
              "type": "string"
            },
            "vehicleInsuranceRef": {
              "type": "string"
            },
            "vehicleMake": {
              "type": "string"
            },
            "vehicleModel": {
              "type": "string"
            },
            "vehicleChassisNum": {
              "type": "string"
            },
            "vehicleGrossWeight": {
              "type": "string"
            },
            "vehicleYearManufactured": {
              "type": "integer"
            },
            "vehicleStatus": {
              "type": "string"
            },
            "vehicleDeliveredDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleTransferredDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleMOTDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleInspectedDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleServicedDate": {
              "type": "string",
              "format": "date"
            },
            "vehicleUnattended": {
              "type": "boolean"
            },
            "vehicleStationary": {
              "type": "boolean"
            },
            "vehicleLights": {
              "type": "string"
            },
            "vehicleSpeed": {
              "type": "string"
            },
            "vehicleNumOfPassengers": {
              "type": "string"
            },
            "vehiclePassengerDetails": {
              "type": "string"
            },
            "vehicleSeatBeltsFitted": {
              "type": "boolean"
            },
            "vehicleSeatBeltsInUse": {
              "type": "boolean"
            },
            "vehicleUsedWithPermission": {
              "type": "boolean"
            },
            "vehicleNoPermissionDetails": {
              "type": "string"
            },
            "vehicleDamageDetails": {
              "type": "string"
            },
            "vehicleWhereInspect": {
              "type": "string"
            },
            "otherVehicles": {
              "type": "string"
            },
            "otherVehicleLights": {
              "type": "string"
            },
            "otherVehicleSpeed": {
              "type": "string"
            },
            "trailer": {
              "type": "boolean"
            },
            "trailerIdNumber": {
              "type": "string"
            },
            "trailerMake": {
              "type": "string"
            },
            "trailerModel": {
              "type": "string"
            },
            "trailerStatus": {
              "type": "string"
            },
            "trailerOwnerDetails": {
              "type": "string"
            },
            "trailerNatureOfLoad": {
              "type": "string"
            },
            "roadType": {
              "type": "string"
            },
            "roadSpeedLimit": {
              "type": "string"
            },
            "roadState": {
              "type": "string"
            },
            "roadWidth": {
              "type": "string"
            },
            "roadStreetLightsOn": {
              "type": "boolean"
            },
            "policeAttended": {
              "type": "boolean"
            },
            "policeOfficerName": {
              "type": "string"
            },
            "policeStationName": {
              "type": "string"
            },
            "policeForceName": {
              "type": "string"
            },
            "policeProsecutionWarning": {
              "type": "boolean"
            },
            "personType": {
              "type": "string"
            },
            "personTypeOther": {
              "type": "string"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personTitle": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personSex": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "personLicenceType": {
              "type": "string"
            },
            "personLicenceNumber": {
              "type": "string"
            },
            "personLicenceIssue": {
              "type": "string"
            },
            "personLicenceValidDate": {
              "type": "string",
              "format": "date"
            },
            "personLicenceExpireDate": {
              "type": "string",
              "format": "date"
            },
            "personLicenceCategory": {
              "type": "string"
            },
            "personLicenceGroup": {
              "type": "string"
            },
            "personDriverDetails": {
              "type": "string"
            },
            "personInjured": {
              "type": "boolean"
            },
            "personTakenToHospital": {
              "type": "string"
            },
            "personDetained": {
              "type": "string"
            },
            "personInjuryDetails": {
              "type": "string"
            },
            "environmentalType": {
              "type": "string"
            },
            "environmentalTypeOther": {
              "type": "string"
            },
            "environmentalRelease": {
              "type": "string"
            },
            "environmentalReleaseTo": {
              "type": "string"
            },
            "environmentalWitness": {
              "type": "string"
            },
            "environmentalAction": {
              "type": "string"
            },
            "estLostTime": {
              "type": "number"
            },
            "estLostCost": {
              "type": "number"
            },
            "estLostTimeCost": {
              "type": "number"
            },
            "actLostTime": {
              "type": "number"
            },
            "actLostCost": {
              "type": "number"
            },
            "actLostTimeCost": {
              "type": "number"
            },
            "estReplaceTime": {
              "type": "number"
            },
            "estReplaceCost": {
              "type": "number"
            },
            "estReplaceTimeCost": {
              "type": "number"
            },
            "actReplaceTime": {
              "type": "number"
            },
            "actReplaceCost": {
              "type": "number"
            },
            "actReplaceTimeCost": {
              "type": "number"
            },
            "estProductionUnit": {
              "type": "number"
            },
            "estProductionCost": {
              "type": "number"
            },
            "estProductionTime": {
              "type": "number"
            },
            "actProductionUnit": {
              "type": "number"
            },
            "actProductionCost": {
              "type": "number"
            },
            "actProductionTime": {
              "type": "number"
            },
            "estEquipReplace": {
              "type": "number"
            },
            "estEquipRepair": {
              "type": "number"
            },
            "estEquipHire": {
              "type": "number"
            },
            "actEquipReplace": {
              "type": "number"
            },
            "actEquipRepair": {
              "type": "number"
            },
            "actEquipHire": {
              "type": "number"
            },
            "estFinancialClaim": {
              "type": "number"
            },
            "estFinancialFine": {
              "type": "number"
            },
            "actFinancialClaim": {
              "type": "number"
            },
            "actFinancialFine": {
              "type": "number"
            },
            "estMaterialCost": {
              "type": "number"
            },
            "actMaterialCost": {
              "type": "number"
            },
            "totalCostEstimate": {
              "type": "number"
            },
            "totalCostActual": {
              "type": "number"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetIncidentEventGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "integer"
            },
            "orgUnitName": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "incidentLocation": {
              "type": "string"
            },
            "incidentLocality": {
              "type": "string"
            },
            "incidentType": {
              "type": "string"
            },
            "incidentSubType": {
              "type": "string"
            },
            "incidentThirdLevel": {
              "type": "string"
            },
            "incidentTypeOther": {
              "type": "string"
            },
            "incidentDangerousType": {
              "type": "string"
            },
            "incidentSeverity": {
              "type": "string"
            },
            "incidentStatus": {
              "type": "string"
            },
            "incidentOccurredAt": {
              "type": "string",
              "format": "date-time"
            },
            "incidentReportedBy": {
              "type": "string"
            },
            "incidentReportedTo": {
              "type": "string"
            },
            "incidentReportedToContact": {
              "type": "string"
            },
            "incidentReportedByDate": {
              "type": "string",
              "format": "date"
            },
            "incidentReportedToDate": {
              "type": "string",
              "format": "date"
            },
            "incidentStartAbsenceDate": {
              "type": "string",
              "format": "date"
            },
            "incidentReturnToWorkDate": {
              "type": "string",
              "format": "date"
            },
            "incidentDetails": {
              "type": "string"
            },
            "incidentNearMiss": {
              "type": "boolean"
            },
            "incidentLostTime": {
              "type": "boolean"
            },
            "incidentReportable": {
              "type": "boolean"
            },
            "incidentWorkRelated": {
              "type": "boolean"
            },
            "investigation": {
              "type": "boolean"
            },
            "investigationDate": {
              "type": "string",
              "format": "date"
            },
            "investigationFindings": {
              "type": "string"
            },
            "investigationRootCause": {
              "type": "string"
            },
            "investigationReason": {
              "type": "string"
            },
            "investigationFurtherReason": {
              "type": "string"
            },
            "investigationOutcome": {
              "type": "string"
            },
            "investigationActionsTaken": {
              "type": "string"
            },
            "investigationRecommendations": {
              "type": "string"
            },
            "violent": {
              "type": "boolean"
            },
            "violentAssaultType": {
              "type": "string"
            },
            "violentAssaultedBefore": {
              "type": "boolean"
            },
            "violentNumAssailants": {
              "type": "integer"
            },
            "violentAssailantStatus": {
              "type": "string"
            },
            "violentWeaponType": {
              "type": "string"
            },
            "violentRacialType": {
              "type": "string"
            },
            "violentTraumaLevel": {
              "type": "string"
            },
            "violentCounselling": {
              "type": "boolean"
            },
            "violentPoliceNotified": {
              "type": "boolean"
            },
            "violentPoliceCrimeRef": {
              "type": "string"
            },
            "healthAffected": {
              "type": "boolean"
            },
            "healthTreatment": {
              "type": "string"
            },
            "healthDoctorComments": {
              "type": "string"
            },
            "youngInvolved": {
              "type": "boolean"
            },
            "youngType": {
              "type": "string"
            },
            "youngActivity": {
              "type": "string"
            },
            "youngParentsInformed": {
              "type": "boolean"
            },
            "youngExistingMedical": {
              "type": "boolean"
            },
            "personInvolved": {
              "type": "boolean"
            },
            "personEmployee": {
              "type": "boolean"
            },
            "personReference": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personTitle": {
              "type": "string"
            },
            "personAgeRange": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personSex": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "personEmail": {
              "type": "string"
            },
            "personJobTitle": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personOrgUnitName": {
              "type": "string"
            },
            "personLocation": {
              "type": "string"
            },
            "environmentalType": {
              "type": "string"
            },
            "environmentalTypeOther": {
              "type": "string"
            },
            "environmentalRelease": {
              "type": "string"
            },
            "environmentalReleaseTo": {
              "type": "string"
            },
            "environmentalWitness": {
              "type": "string"
            },
            "environmentalAction": {
              "type": "string"
            },
            "equipInvolved": {
              "type": "boolean"
            },
            "equipReference": {
              "type": "string"
            },
            "equipName": {
              "type": "string"
            },
            "equipDescription": {
              "type": "string"
            },
            "equipSecondInvolved": {
              "type": "boolean"
            },
            "equipSecondReference": {
              "type": "string"
            },
            "equipSecondName": {
              "type": "string"
            },
            "equipSecondDescription": {
              "type": "string"
            },
            "riskPotentialDetails": {
              "type": "string"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "estLostTime": {
              "type": "number"
            },
            "estLostCost": {
              "type": "number"
            },
            "estLostTimeCost": {
              "type": "number"
            },
            "actLostTime": {
              "type": "number"
            },
            "actLostCost": {
              "type": "number"
            },
            "actLostTimeCost": {
              "type": "number"
            },
            "estReplaceTime": {
              "type": "number"
            },
            "estReplaceCost": {
              "type": "number"
            },
            "estReplaceTimeCost": {
              "type": "number"
            },
            "actReplaceTime": {
              "type": "number"
            },
            "actReplaceCost": {
              "type": "number"
            },
            "actReplaceTimeCost": {
              "type": "number"
            },
            "estProductionUnit": {
              "type": "number"
            },
            "estProductionCost": {
              "type": "number"
            },
            "estProductionTime": {
              "type": "number"
            },
            "actProductionUnit": {
              "type": "number"
            },
            "actProductionCost": {
              "type": "number"
            },
            "actProductionTime": {
              "type": "number"
            },
            "estEquipReplace": {
              "type": "number"
            },
            "estEquipRepair": {
              "type": "number"
            },
            "estEquipHire": {
              "type": "number"
            },
            "actEquipReplace": {
              "type": "number"
            },
            "actEquipRepair": {
              "type": "number"
            },
            "actEquipHire": {
              "type": "number"
            },
            "estFinancialClaim": {
              "type": "number"
            },
            "estFinancialFine": {
              "type": "number"
            },
            "actFinancialClaim": {
              "type": "number"
            },
            "actFinancialFine": {
              "type": "number"
            },
            "estMaterialCost": {
              "type": "number"
            },
            "actMaterialCost": {
              "type": "number"
            },
            "totalCostEstimate": {
              "type": "number"
            },
            "totalCostActual": {
              "type": "number"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetProceduralGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "integer"
            },
            "orgUnitName": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "auditLocation": {
              "type": "string"
            },
            "auditLocality": {
              "type": "string"
            },
            "auditDate": {
              "type": "string",
              "format": "date"
            },
            "auditTemplateName": {
              "type": "string"
            },
            "auditTemplateStatus": {
              "type": "string"
            },
            "auditDescription": {
              "type": "string"
            },
            "auditNumOfPeople": {
              "type": "integer"
            },
            "auditTimeSpent": {
              "type": "number"
            },
            "scoreMax": {
              "type": "integer"
            },
            "scoreMaxPossible": {
              "type": "integer"
            },
            "scoreActual": {
              "type": "integer"
            },
            "scoreActualReview": {
              "type": "integer"
            },
            "scorePercent": {
              "type": "number"
            },
            "scorePercentReview": {
              "type": "number"
            },
            "starRating": {
              "type": "integer"
            },
            "starRatingReview": {
              "type": "integer"
            },
            "auditeeForename": {
              "type": "string"
            },
            "auditeeSurname": {
              "type": "string"
            },
            "auditorForename": {
              "type": "string"
            },
            "auditorSurname": {
              "type": "string"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetHazardSpottingGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "integer"
            },
            "orgUnitName": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "hazardLocation": {
              "type": "string"
            },
            "hazardLocality": {
              "type": "string"
            },
            "hazardSpottedAt": {
              "type": "string",
              "format": "date-time"
            },
            "hazardReportedBy": {
              "type": "string"
            },
            "hazardReportedDate": {
              "type": "string",
              "format": "date"
            },
            "hazardType": {
              "type": "string"
            },
            "hazardTypeOther": {
              "type": "string"
            },
            "hazardSubType": {
              "type": "string"
            },
            "hazardStillPresent": {
              "type": "boolean"
            },
            "hazardDetails": {
              "type": "string"
            },
            "hazardComments": {
              "type": "string"
            },
            "resolutionRequired": {
              "type": "boolean"
            },
            "resolutionSteps": {
              "type": "string"
            },
            "resolutionDone": {
              "type": "boolean"
            },
            "resolutionDate": {
              "type": "string",
              "format": "date"
            },
            "potentialCauseInjury": {
              "type": "boolean"
            },
            "potentialDamageEquip": {
              "type": "boolean"
            },
            "potentialDamageProp": {
              "type": "boolean"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "geoLatitude": {
              "type": "number"
            },
            "geoLongitude": {
              "type": "number"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetPersonGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "integer"
            },
            "orgUnitName": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "personLocation": {
              "type": "string"
            },
            "personLocality": {
              "type": "string"
            },
            "isCurrent": {
              "type": "boolean"
            },
            "personType": {
              "type": "string"
            },
            "personTitle": {
              "type": "string"
            },
            "personForename": {
              "type": "string"
            },
            "personSurname": {
              "type": "string"
            },
            "personJobTitle": {
              "type": "string"
            },
            "personOccupation": {
              "type": "string"
            },
            "personShift": {
              "type": "string"
            },
            "personManagerName": {
              "type": "string"
            },
            "personManagerPhone": {
              "type": "string"
            },
            "personAgeRange": {
              "type": "string"
            },
            "personBirthDate": {
              "type": "string",
              "format": "date"
            },
            "personNINumber": {
              "type": "string"
            },
            "personNationality": {
              "type": "string"
            },
            "personMaritalStatus": {
              "type": "string"
            },
            "personSex": {
              "type": "string"
            },
            "personAddress1": {
              "type": "string"
            },
            "personAddress2": {
              "type": "string"
            },
            "personAddress3": {
              "type": "string"
            },
            "personAddressTown": {
              "type": "string"
            },
            "personAddressCounty": {
              "type": "string"
            },
            "personAddressPostcode": {
              "type": "string"
            },
            "personPhoneNumber": {
              "type": "string"
            },
            "personMobileNumber": {
              "type": "string"
            },
            "personEmail": {
              "type": "string"
            },
            "personNextOfKinName": {
              "type": "string"
            },
            "personNextOfKinRelationship": {
              "type": "string"
            },
            "personNextOfKinAddress1": {
              "type": "string"
            },
            "personNextOfKinAddress2": {
              "type": "string"
            },
            "personNextOfKinAddress3": {
              "type": "string"
            },
            "personNextOfKinTown": {
              "type": "string"
            },
            "personNextofKinCounty": {
              "type": "string"
            },
            "personNextOfKinPostCode": {
              "type": "string"
            },
            "personNextOfKinPhone": {
              "type": "string"
            },
            "personNextOfKinMobile": {
              "type": "string"
            },
            "personNextOfKinEmail": {
              "type": "string"
            },
            "personNotes": {
              "type": "string"
            },
            "personAdditional1": {
              "type": "string"
            },
            "personAdditional2": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetGeneralRiskGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "integer"
            },
            "orgUnitName": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "riskLocation": {
              "type": "string"
            },
            "riskLocality": {
              "type": "string"
            },
            "riskDescription": {
              "type": "string"
            },
            "riskConclusion": {
              "type": "string"
            },
            "riskAssessorName": {
              "type": "string"
            },
            "riskAssessmentDate": {
              "type": "string",
              "format": "date"
            },
            "riskPeopleExposed": {
              "type": "integer"
            },
            "riskTimeSpent": {
              "type": "number"
            },
            "riskFactorValue": {
              "type": "integer"
            },
            "riskFactorCaption": {
              "type": "string"
            },
            "riskFactorCount": {
              "type": "integer"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetTrainingGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "integer"
            },
            "orgUnitName": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "trainingLocation": {
              "type": "string"
            },
            "trainingLocality": {
              "type": "string"
            },
            "trainingRequiredBy": {
              "type": "string",
              "format": "date"
            },
            "trainingCompletedOn": {
              "type": "string",
              "format": "date"
            },
            "trainingStatus": {
              "type": "string"
            },
            "trainingComments": {
              "type": "string"
            },
            "trainingEmployeeForename": {
              "type": "string"
            },
            "trainingEmployeeSurname": {
              "type": "string"
            },
            "trainingEmployeeEmail": {
              "type": "string"
            },
            "trainingCourseName": {
              "type": "string"
            },
            "trainingCourseSubject": {
              "type": "string"
            },
            "trainingCourseDate": {
              "type": "string",
              "format": "date"
            },
            "trainingCourseCost": {
              "type": "number"
            },
            "trainingCouseProvider": {
              "type": "string"
            },
            "trainingCourseDuration": {
              "type": "string"
            },
            "trainingCourseHeldBy": {
              "type": "string"
            },
            "trainingCourseRenewDate": {
              "type": "string",
              "format": "date"
            },
            "trainingCourseTrainingType": {
              "type": "string"
            },
            "trainingCourseScheduleType": {
              "type": "string"
            },
            "trainingCourseScheduleInterval": {
              "type": "integer"
            },
            "trainingCourseLocation": {
              "type": "string"
            },
            "trainingDidNotAttend": {
              "type": "boolean"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      },
      "exportDatasetEquipmentGETResponse": {
        "type": "array",
        "description": "To ensure forwards compatibility responses do NOT set additionalProperties=false and do NOT use required fields",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "createdAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedAtUTC": {
              "type": "string",
              "format": "date-time"
            },
            "createdByUser": {
              "type": "string"
            },
            "modifiedByUser": {
              "type": "string"
            },
            "isConfidential": {
              "type": "boolean"
            },
            "isArchive": {
              "type": "boolean"
            },
            "entityReference": {
              "type": "string"
            },
            "orgUnitId": {
              "type": "integer"
            },
            "orgUnitName": {
              "type": "string"
            },
            "iqTemplateName": {
              "type": "string"
            },
            "iqTemplateMajorVersion": {
              "type": "integer"
            },
            "equipmentLocation": {
              "type": "string"
            },
            "equipmentLocality": {
              "type": "string"
            },
            "equipmentName": {
              "type": "string"
            },
            "equipmentModel": {
              "type": "string"
            },
            "equipmentDescription": {
              "type": "string"
            },
            "equipmentSerialNumber": {
              "type": "string"
            },
            "equipmentAssetNumber": {
              "type": "string"
            },
            "equipmentCEMark": {
              "type": "boolean"
            },
            "equipmentPurchasedDate": {
              "type": "string",
              "format": "date"
            },
            "equipmentValue": {
              "type": "number"
            },
            "equipmentInformationLog": {
              "type": "string"
            },
            "equipmentNotes": {
              "type": "string"
            },
            "equipmentType": {
              "type": "string"
            },
            "custom": {
              "type": "object"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}
